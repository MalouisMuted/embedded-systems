
harkkaUNO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000072c  000007c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080011c  0080011c  000007dc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000838  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000097f  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d3  00000000  00000000  00001247  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000031d  00000000  00000000  00001a1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001d38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000467  00000000  00000000  00001dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ea  00000000  00000000  00002233  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000231d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e2       	ldi	r30, 0x2C	; 44
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 31       	cpi	r26, 0x1C	; 28
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e1       	ldi	r26, 0x1C	; 28
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 32       	cpi	r26, 0x22	; 34
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7d 00 	call	0xfa	; 0xfa <main>
  9e:	0c 94 94 03 	jmp	0x728	; 0x728 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <USART_Transmit+0x4>
	{
		;
	}
	
	/* Put the data into a buffer, then send/transmit the data */
	UDR0 = data;
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  b4:	08 95       	ret

000000b6 <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
  b6:	e0 ec       	ldi	r30, 0xC0	; 192
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	85 ff       	sbrs	r24, 5
  be:	fd cf       	rjmp	.-6      	; 0xba <USART_Receive+0x4>
	{
		;
	}
	
	/* Get the received data from the buffer */
	return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
  c4:	08 95       	ret

000000c6 <SPI_SlaveInit>:


void SPI_SlaveInit(void)
{
    /* Set MISO output, all others input */
    DDRB  = (1 << PB4);
  c6:	80 e1       	ldi	r24, 0x10	; 16
  c8:	84 b9       	out	0x04, r24	; 4
    /* Enable SPI */
    SPCR  = (1 << 6);
  ca:	80 e4       	ldi	r24, 0x40	; 64
  cc:	8c bd       	out	0x2c, r24	; 44
  ce:	08 95       	ret

000000d0 <SPI_SlaveReceive>:
{
	char spi_receive_data[20];
	/* alkaa menem‰‰n l‰hetett‰v‰‰ viesti‰ l‰pi bittibitilt‰ */
	for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++){
		/* lataa send bufferiin l‰hetett‰v‰n bitin*/
		SPDR = spi_send_data[spi_data_index];
  d0:	fc 01       	movw	r30, r24
  d2:	20 81       	ld	r18, Z
  d4:	2e bd       	out	0x2e, r18	; 46
		while (!(SPSR & (1 << SPIF))){
  d6:	0d b4       	in	r0, 0x2d	; 45
  d8:	07 fe       	sbrs	r0, 7
  da:	fd cf       	rjmp	.-6      	; 0xd6 <SPI_SlaveReceive+0x6>
			; /* odottaa ett‰ saa luvan l‰hett‰‰ ja samalla vastaanottaa bitin */
		}
		spi_receive_data[spi_data_index] = SPDR; /* tallettaa saatua dataa bitti bitilt‰*/
  dc:	2e b5       	in	r18, 0x2e	; 46
{
	char spi_receive_data[20];
	/* alkaa menem‰‰n l‰hetett‰v‰‰ viesti‰ l‰pi bittibitilt‰ */
	for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++){
		/* lataa send bufferiin l‰hetett‰v‰n bitin*/
		SPDR = spi_send_data[spi_data_index];
  de:	fc 01       	movw	r30, r24
  e0:	81 81       	ldd	r24, Z+1	; 0x01
  e2:	8e bd       	out	0x2e, r24	; 46
		while (!(SPSR & (1 << SPIF))){
  e4:	0d b4       	in	r0, 0x2d	; 45
  e6:	07 fe       	sbrs	r0, 7
  e8:	fd cf       	rjmp	.-6      	; 0xe4 <SPI_SlaveReceive+0x14>
			; /* odottaa ett‰ saa luvan l‰hett‰‰ ja samalla vastaanottaa bitin */
		}
		spi_receive_data[spi_data_index] = SPDR; /* tallettaa saatua dataa bitti bitilt‰*/
  ea:	8e b5       	in	r24, 0x2e	; 46
	}
    /* Return Data Register */
    return spi_receive_data;
}
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	08 95       	ret

000000f0 <MotionSensorInit>:
void MotionSensorInit(void)
{
	/* Set pin7(PD7) as input for motion sensor */
	DDRD &= ~(1 << PD7);
  f0:	57 98       	cbi	0x0a, 7	; 10
  f2:	08 95       	ret

000000f4 <MotionSensorCheck>:
char MotionSensorCheck(void)
{
	int8_t motion_value = 0;
	char status[20];
	/* checking if there has been motion */
	motion_value = (PIND & (1<<PD7));
  f4:	89 b1       	in	r24, 0x09	; 9
		strcpy(status,"motion");
	} else {
		strcpy(status,"still");
	}
	return status;
}
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret

000000fa <main>:
// Setup the stream functions for UART
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

int main(void)
{
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	a8 97       	sbiw	r28, 0x28	; 40
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	f8 94       	cli
 108:	de bf       	out	0x3e, r29	; 62
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	cd bf       	out	0x3d, r28	; 61

static void
USART_init(uint16_t ubrr) // unsigned int
{
	/* Set baud rate in the USART Baud Rate Registers (UBRR) */
	UBRR0H = (unsigned char) (ubrr >> 8);
 10e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char) ubrr;
 112:	87 e6       	ldi	r24, 0x67	; 103
 114:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	
	/* Enable receiver and transmitter on RX0 and TX0 */
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //NOTE: the ATmega328p has 1 UART: 0
 118:	e1 ec       	ldi	r30, 0xC1	; 193
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	88 61       	ori	r24, 0x18	; 24
 120:	80 83       	st	Z, r24
	
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 122:	e2 ec       	ldi	r30, 0xC2	; 194
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	8e 60       	ori	r24, 0x0E	; 14
 12a:	80 83       	st	Z, r24
    // enable global interrupts
	char send[20];
	char recive[20];
	//usb serial
	USART_init(MYUBRR);
	stdout = &uart_output;
 12c:	ec e1       	ldi	r30, 0x1C	; 28
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	8e e0       	ldi	r24, 0x0E	; 14
 132:	91 e0       	ldi	r25, 0x01	; 1
 134:	93 83       	std	Z+3, r25	; 0x03
 136:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	91 83       	std	Z+1, r25	; 0x01
 13e:	80 83       	st	Z, r24
	SPI_SlaveInit();
 140:	0e 94 63 00 	call	0xc6	; 0xc6 <SPI_SlaveInit>
	MotionSensorInit();
 144:	0e 94 78 00 	call	0xf0	; 0xf0 <MotionSensorInit>
    while (1)
    {
		/* Check sensor and then transmit to SPI master */
		send[20] = MotionSensorCheck();
		recive[20] = SPI_SlaveReceive(send);
		printf(recive);
 148:	8e 01       	movw	r16, r28
 14a:	0b 5e       	subi	r16, 0xEB	; 235
 14c:	1f 4f       	sbci	r17, 0xFF	; 255
	MotionSensorInit();
	// Loop
    while (1)
    {
		/* Check sensor and then transmit to SPI master */
		send[20] = MotionSensorCheck();
 14e:	0e 94 7a 00 	call	0xf4	; 0xf4 <MotionSensorCheck>
 152:	8d 8b       	std	Y+21, r24	; 0x15
		recive[20] = SPI_SlaveReceive(send);
 154:	ce 01       	movw	r24, r28
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	0e 94 68 00 	call	0xd0	; 0xd0 <SPI_SlaveReceive>
 15c:	89 a7       	std	Y+41, r24	; 0x29
		printf(recive);
 15e:	1f 93       	push	r17
 160:	0f 93       	push	r16
 162:	0e 94 b6 00 	call	0x16c	; 0x16c <printf>
 166:	0f 90       	pop	r0
 168:	0f 90       	pop	r0
 16a:	f1 cf       	rjmp	.-30     	; 0x14e <main+0x54>

0000016c <printf>:
 16c:	a0 e0       	ldi	r26, 0x00	; 0
 16e:	b0 e0       	ldi	r27, 0x00	; 0
 170:	ec eb       	ldi	r30, 0xBC	; 188
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__prologue_saves__+0x20>
 178:	ae 01       	movw	r20, r28
 17a:	4b 5f       	subi	r20, 0xFB	; 251
 17c:	5f 4f       	sbci	r21, 0xFF	; 255
 17e:	fa 01       	movw	r30, r20
 180:	61 91       	ld	r22, Z+
 182:	71 91       	ld	r23, Z+
 184:	af 01       	movw	r20, r30
 186:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end+0x2>
 18a:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x3>
 18e:	0e 94 cc 00 	call	0x198	; 0x198 <vfprintf>
 192:	e2 e0       	ldi	r30, 0x02	; 2
 194:	0c 94 89 03 	jmp	0x712	; 0x712 <__epilogue_restores__+0x20>

00000198 <vfprintf>:
 198:	ab e0       	ldi	r26, 0x0B	; 11
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	e2 ed       	ldi	r30, 0xD2	; 210
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	0c 94 5d 03 	jmp	0x6ba	; 0x6ba <__prologue_saves__>
 1a4:	6c 01       	movw	r12, r24
 1a6:	7b 01       	movw	r14, r22
 1a8:	8a 01       	movw	r16, r20
 1aa:	fc 01       	movw	r30, r24
 1ac:	17 82       	std	Z+7, r1	; 0x07
 1ae:	16 82       	std	Z+6, r1	; 0x06
 1b0:	83 81       	ldd	r24, Z+3	; 0x03
 1b2:	81 ff       	sbrs	r24, 1
 1b4:	cc c1       	rjmp	.+920    	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 1b6:	ce 01       	movw	r24, r28
 1b8:	01 96       	adiw	r24, 0x01	; 1
 1ba:	3c 01       	movw	r6, r24
 1bc:	f6 01       	movw	r30, r12
 1be:	93 81       	ldd	r25, Z+3	; 0x03
 1c0:	f7 01       	movw	r30, r14
 1c2:	93 fd       	sbrc	r25, 3
 1c4:	85 91       	lpm	r24, Z+
 1c6:	93 ff       	sbrs	r25, 3
 1c8:	81 91       	ld	r24, Z+
 1ca:	7f 01       	movw	r14, r30
 1cc:	88 23       	and	r24, r24
 1ce:	09 f4       	brne	.+2      	; 0x1d2 <vfprintf+0x3a>
 1d0:	ba c1       	rjmp	.+884    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 1d2:	85 32       	cpi	r24, 0x25	; 37
 1d4:	39 f4       	brne	.+14     	; 0x1e4 <vfprintf+0x4c>
 1d6:	93 fd       	sbrc	r25, 3
 1d8:	85 91       	lpm	r24, Z+
 1da:	93 ff       	sbrs	r25, 3
 1dc:	81 91       	ld	r24, Z+
 1de:	7f 01       	movw	r14, r30
 1e0:	85 32       	cpi	r24, 0x25	; 37
 1e2:	29 f4       	brne	.+10     	; 0x1ee <vfprintf+0x56>
 1e4:	b6 01       	movw	r22, r12
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 1ec:	e7 cf       	rjmp	.-50     	; 0x1bc <vfprintf+0x24>
 1ee:	91 2c       	mov	r9, r1
 1f0:	21 2c       	mov	r2, r1
 1f2:	31 2c       	mov	r3, r1
 1f4:	ff e1       	ldi	r31, 0x1F	; 31
 1f6:	f3 15       	cp	r31, r3
 1f8:	d8 f0       	brcs	.+54     	; 0x230 <vfprintf+0x98>
 1fa:	8b 32       	cpi	r24, 0x2B	; 43
 1fc:	79 f0       	breq	.+30     	; 0x21c <vfprintf+0x84>
 1fe:	38 f4       	brcc	.+14     	; 0x20e <vfprintf+0x76>
 200:	80 32       	cpi	r24, 0x20	; 32
 202:	79 f0       	breq	.+30     	; 0x222 <vfprintf+0x8a>
 204:	83 32       	cpi	r24, 0x23	; 35
 206:	a1 f4       	brne	.+40     	; 0x230 <vfprintf+0x98>
 208:	23 2d       	mov	r18, r3
 20a:	20 61       	ori	r18, 0x10	; 16
 20c:	1d c0       	rjmp	.+58     	; 0x248 <vfprintf+0xb0>
 20e:	8d 32       	cpi	r24, 0x2D	; 45
 210:	61 f0       	breq	.+24     	; 0x22a <vfprintf+0x92>
 212:	80 33       	cpi	r24, 0x30	; 48
 214:	69 f4       	brne	.+26     	; 0x230 <vfprintf+0x98>
 216:	23 2d       	mov	r18, r3
 218:	21 60       	ori	r18, 0x01	; 1
 21a:	16 c0       	rjmp	.+44     	; 0x248 <vfprintf+0xb0>
 21c:	83 2d       	mov	r24, r3
 21e:	82 60       	ori	r24, 0x02	; 2
 220:	38 2e       	mov	r3, r24
 222:	e3 2d       	mov	r30, r3
 224:	e4 60       	ori	r30, 0x04	; 4
 226:	3e 2e       	mov	r3, r30
 228:	2a c0       	rjmp	.+84     	; 0x27e <vfprintf+0xe6>
 22a:	f3 2d       	mov	r31, r3
 22c:	f8 60       	ori	r31, 0x08	; 8
 22e:	1d c0       	rjmp	.+58     	; 0x26a <vfprintf+0xd2>
 230:	37 fc       	sbrc	r3, 7
 232:	2d c0       	rjmp	.+90     	; 0x28e <vfprintf+0xf6>
 234:	20 ed       	ldi	r18, 0xD0	; 208
 236:	28 0f       	add	r18, r24
 238:	2a 30       	cpi	r18, 0x0A	; 10
 23a:	40 f0       	brcs	.+16     	; 0x24c <vfprintf+0xb4>
 23c:	8e 32       	cpi	r24, 0x2E	; 46
 23e:	b9 f4       	brne	.+46     	; 0x26e <vfprintf+0xd6>
 240:	36 fc       	sbrc	r3, 6
 242:	81 c1       	rjmp	.+770    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 244:	23 2d       	mov	r18, r3
 246:	20 64       	ori	r18, 0x40	; 64
 248:	32 2e       	mov	r3, r18
 24a:	19 c0       	rjmp	.+50     	; 0x27e <vfprintf+0xe6>
 24c:	36 fe       	sbrs	r3, 6
 24e:	06 c0       	rjmp	.+12     	; 0x25c <vfprintf+0xc4>
 250:	8a e0       	ldi	r24, 0x0A	; 10
 252:	98 9e       	mul	r9, r24
 254:	20 0d       	add	r18, r0
 256:	11 24       	eor	r1, r1
 258:	92 2e       	mov	r9, r18
 25a:	11 c0       	rjmp	.+34     	; 0x27e <vfprintf+0xe6>
 25c:	ea e0       	ldi	r30, 0x0A	; 10
 25e:	2e 9e       	mul	r2, r30
 260:	20 0d       	add	r18, r0
 262:	11 24       	eor	r1, r1
 264:	22 2e       	mov	r2, r18
 266:	f3 2d       	mov	r31, r3
 268:	f0 62       	ori	r31, 0x20	; 32
 26a:	3f 2e       	mov	r3, r31
 26c:	08 c0       	rjmp	.+16     	; 0x27e <vfprintf+0xe6>
 26e:	8c 36       	cpi	r24, 0x6C	; 108
 270:	21 f4       	brne	.+8      	; 0x27a <vfprintf+0xe2>
 272:	83 2d       	mov	r24, r3
 274:	80 68       	ori	r24, 0x80	; 128
 276:	38 2e       	mov	r3, r24
 278:	02 c0       	rjmp	.+4      	; 0x27e <vfprintf+0xe6>
 27a:	88 36       	cpi	r24, 0x68	; 104
 27c:	41 f4       	brne	.+16     	; 0x28e <vfprintf+0xf6>
 27e:	f7 01       	movw	r30, r14
 280:	93 fd       	sbrc	r25, 3
 282:	85 91       	lpm	r24, Z+
 284:	93 ff       	sbrs	r25, 3
 286:	81 91       	ld	r24, Z+
 288:	7f 01       	movw	r14, r30
 28a:	81 11       	cpse	r24, r1
 28c:	b3 cf       	rjmp	.-154    	; 0x1f4 <vfprintf+0x5c>
 28e:	98 2f       	mov	r25, r24
 290:	9f 7d       	andi	r25, 0xDF	; 223
 292:	95 54       	subi	r25, 0x45	; 69
 294:	93 30       	cpi	r25, 0x03	; 3
 296:	28 f4       	brcc	.+10     	; 0x2a2 <vfprintf+0x10a>
 298:	0c 5f       	subi	r16, 0xFC	; 252
 29a:	1f 4f       	sbci	r17, 0xFF	; 255
 29c:	9f e3       	ldi	r25, 0x3F	; 63
 29e:	99 83       	std	Y+1, r25	; 0x01
 2a0:	0d c0       	rjmp	.+26     	; 0x2bc <vfprintf+0x124>
 2a2:	83 36       	cpi	r24, 0x63	; 99
 2a4:	31 f0       	breq	.+12     	; 0x2b2 <vfprintf+0x11a>
 2a6:	83 37       	cpi	r24, 0x73	; 115
 2a8:	71 f0       	breq	.+28     	; 0x2c6 <vfprintf+0x12e>
 2aa:	83 35       	cpi	r24, 0x53	; 83
 2ac:	09 f0       	breq	.+2      	; 0x2b0 <vfprintf+0x118>
 2ae:	59 c0       	rjmp	.+178    	; 0x362 <vfprintf+0x1ca>
 2b0:	21 c0       	rjmp	.+66     	; 0x2f4 <vfprintf+0x15c>
 2b2:	f8 01       	movw	r30, r16
 2b4:	80 81       	ld	r24, Z
 2b6:	89 83       	std	Y+1, r24	; 0x01
 2b8:	0e 5f       	subi	r16, 0xFE	; 254
 2ba:	1f 4f       	sbci	r17, 0xFF	; 255
 2bc:	88 24       	eor	r8, r8
 2be:	83 94       	inc	r8
 2c0:	91 2c       	mov	r9, r1
 2c2:	53 01       	movw	r10, r6
 2c4:	13 c0       	rjmp	.+38     	; 0x2ec <vfprintf+0x154>
 2c6:	28 01       	movw	r4, r16
 2c8:	f2 e0       	ldi	r31, 0x02	; 2
 2ca:	4f 0e       	add	r4, r31
 2cc:	51 1c       	adc	r5, r1
 2ce:	f8 01       	movw	r30, r16
 2d0:	a0 80       	ld	r10, Z
 2d2:	b1 80       	ldd	r11, Z+1	; 0x01
 2d4:	36 fe       	sbrs	r3, 6
 2d6:	03 c0       	rjmp	.+6      	; 0x2de <vfprintf+0x146>
 2d8:	69 2d       	mov	r22, r9
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <vfprintf+0x14a>
 2de:	6f ef       	ldi	r22, 0xFF	; 255
 2e0:	7f ef       	ldi	r23, 0xFF	; 255
 2e2:	c5 01       	movw	r24, r10
 2e4:	0e 94 b8 02 	call	0x570	; 0x570 <strnlen>
 2e8:	4c 01       	movw	r8, r24
 2ea:	82 01       	movw	r16, r4
 2ec:	f3 2d       	mov	r31, r3
 2ee:	ff 77       	andi	r31, 0x7F	; 127
 2f0:	3f 2e       	mov	r3, r31
 2f2:	16 c0       	rjmp	.+44     	; 0x320 <vfprintf+0x188>
 2f4:	28 01       	movw	r4, r16
 2f6:	22 e0       	ldi	r18, 0x02	; 2
 2f8:	42 0e       	add	r4, r18
 2fa:	51 1c       	adc	r5, r1
 2fc:	f8 01       	movw	r30, r16
 2fe:	a0 80       	ld	r10, Z
 300:	b1 80       	ldd	r11, Z+1	; 0x01
 302:	36 fe       	sbrs	r3, 6
 304:	03 c0       	rjmp	.+6      	; 0x30c <vfprintf+0x174>
 306:	69 2d       	mov	r22, r9
 308:	70 e0       	ldi	r23, 0x00	; 0
 30a:	02 c0       	rjmp	.+4      	; 0x310 <vfprintf+0x178>
 30c:	6f ef       	ldi	r22, 0xFF	; 255
 30e:	7f ef       	ldi	r23, 0xFF	; 255
 310:	c5 01       	movw	r24, r10
 312:	0e 94 ad 02 	call	0x55a	; 0x55a <strnlen_P>
 316:	4c 01       	movw	r8, r24
 318:	f3 2d       	mov	r31, r3
 31a:	f0 68       	ori	r31, 0x80	; 128
 31c:	3f 2e       	mov	r3, r31
 31e:	82 01       	movw	r16, r4
 320:	33 fc       	sbrc	r3, 3
 322:	1b c0       	rjmp	.+54     	; 0x35a <vfprintf+0x1c2>
 324:	82 2d       	mov	r24, r2
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	88 16       	cp	r8, r24
 32a:	99 06       	cpc	r9, r25
 32c:	b0 f4       	brcc	.+44     	; 0x35a <vfprintf+0x1c2>
 32e:	b6 01       	movw	r22, r12
 330:	80 e2       	ldi	r24, 0x20	; 32
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 338:	2a 94       	dec	r2
 33a:	f4 cf       	rjmp	.-24     	; 0x324 <vfprintf+0x18c>
 33c:	f5 01       	movw	r30, r10
 33e:	37 fc       	sbrc	r3, 7
 340:	85 91       	lpm	r24, Z+
 342:	37 fe       	sbrs	r3, 7
 344:	81 91       	ld	r24, Z+
 346:	5f 01       	movw	r10, r30
 348:	b6 01       	movw	r22, r12
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 350:	21 10       	cpse	r2, r1
 352:	2a 94       	dec	r2
 354:	21 e0       	ldi	r18, 0x01	; 1
 356:	82 1a       	sub	r8, r18
 358:	91 08       	sbc	r9, r1
 35a:	81 14       	cp	r8, r1
 35c:	91 04       	cpc	r9, r1
 35e:	71 f7       	brne	.-36     	; 0x33c <vfprintf+0x1a4>
 360:	e8 c0       	rjmp	.+464    	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 362:	84 36       	cpi	r24, 0x64	; 100
 364:	11 f0       	breq	.+4      	; 0x36a <vfprintf+0x1d2>
 366:	89 36       	cpi	r24, 0x69	; 105
 368:	41 f5       	brne	.+80     	; 0x3ba <vfprintf+0x222>
 36a:	f8 01       	movw	r30, r16
 36c:	37 fe       	sbrs	r3, 7
 36e:	07 c0       	rjmp	.+14     	; 0x37e <vfprintf+0x1e6>
 370:	60 81       	ld	r22, Z
 372:	71 81       	ldd	r23, Z+1	; 0x01
 374:	82 81       	ldd	r24, Z+2	; 0x02
 376:	93 81       	ldd	r25, Z+3	; 0x03
 378:	0c 5f       	subi	r16, 0xFC	; 252
 37a:	1f 4f       	sbci	r17, 0xFF	; 255
 37c:	08 c0       	rjmp	.+16     	; 0x38e <vfprintf+0x1f6>
 37e:	60 81       	ld	r22, Z
 380:	71 81       	ldd	r23, Z+1	; 0x01
 382:	07 2e       	mov	r0, r23
 384:	00 0c       	add	r0, r0
 386:	88 0b       	sbc	r24, r24
 388:	99 0b       	sbc	r25, r25
 38a:	0e 5f       	subi	r16, 0xFE	; 254
 38c:	1f 4f       	sbci	r17, 0xFF	; 255
 38e:	f3 2d       	mov	r31, r3
 390:	ff 76       	andi	r31, 0x6F	; 111
 392:	3f 2e       	mov	r3, r31
 394:	97 ff       	sbrs	r25, 7
 396:	09 c0       	rjmp	.+18     	; 0x3aa <vfprintf+0x212>
 398:	90 95       	com	r25
 39a:	80 95       	com	r24
 39c:	70 95       	com	r23
 39e:	61 95       	neg	r22
 3a0:	7f 4f       	sbci	r23, 0xFF	; 255
 3a2:	8f 4f       	sbci	r24, 0xFF	; 255
 3a4:	9f 4f       	sbci	r25, 0xFF	; 255
 3a6:	f0 68       	ori	r31, 0x80	; 128
 3a8:	3f 2e       	mov	r3, r31
 3aa:	2a e0       	ldi	r18, 0x0A	; 10
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	a3 01       	movw	r20, r6
 3b0:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__ultoa_invert>
 3b4:	88 2e       	mov	r8, r24
 3b6:	86 18       	sub	r8, r6
 3b8:	45 c0       	rjmp	.+138    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3ba:	85 37       	cpi	r24, 0x75	; 117
 3bc:	31 f4       	brne	.+12     	; 0x3ca <vfprintf+0x232>
 3be:	23 2d       	mov	r18, r3
 3c0:	2f 7e       	andi	r18, 0xEF	; 239
 3c2:	b2 2e       	mov	r11, r18
 3c4:	2a e0       	ldi	r18, 0x0A	; 10
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	25 c0       	rjmp	.+74     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3ca:	93 2d       	mov	r25, r3
 3cc:	99 7f       	andi	r25, 0xF9	; 249
 3ce:	b9 2e       	mov	r11, r25
 3d0:	8f 36       	cpi	r24, 0x6F	; 111
 3d2:	c1 f0       	breq	.+48     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d4:	18 f4       	brcc	.+6      	; 0x3dc <vfprintf+0x244>
 3d6:	88 35       	cpi	r24, 0x58	; 88
 3d8:	79 f0       	breq	.+30     	; 0x3f8 <vfprintf+0x260>
 3da:	b5 c0       	rjmp	.+362    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 3dc:	80 37       	cpi	r24, 0x70	; 112
 3de:	19 f0       	breq	.+6      	; 0x3e6 <vfprintf+0x24e>
 3e0:	88 37       	cpi	r24, 0x78	; 120
 3e2:	21 f0       	breq	.+8      	; 0x3ec <vfprintf+0x254>
 3e4:	b0 c0       	rjmp	.+352    	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 3e6:	e9 2f       	mov	r30, r25
 3e8:	e0 61       	ori	r30, 0x10	; 16
 3ea:	be 2e       	mov	r11, r30
 3ec:	b4 fe       	sbrs	r11, 4
 3ee:	0d c0       	rjmp	.+26     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f0:	fb 2d       	mov	r31, r11
 3f2:	f4 60       	ori	r31, 0x04	; 4
 3f4:	bf 2e       	mov	r11, r31
 3f6:	09 c0       	rjmp	.+18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f8:	34 fe       	sbrs	r3, 4
 3fa:	0a c0       	rjmp	.+20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3fc:	29 2f       	mov	r18, r25
 3fe:	26 60       	ori	r18, 0x06	; 6
 400:	b2 2e       	mov	r11, r18
 402:	06 c0       	rjmp	.+12     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 404:	28 e0       	ldi	r18, 0x08	; 8
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	05 c0       	rjmp	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40a:	20 e1       	ldi	r18, 0x10	; 16
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	02 c0       	rjmp	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 410:	20 e1       	ldi	r18, 0x10	; 16
 412:	32 e0       	ldi	r19, 0x02	; 2
 414:	f8 01       	movw	r30, r16
 416:	b7 fe       	sbrs	r11, 7
 418:	07 c0       	rjmp	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41a:	60 81       	ld	r22, Z
 41c:	71 81       	ldd	r23, Z+1	; 0x01
 41e:	82 81       	ldd	r24, Z+2	; 0x02
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	0c 5f       	subi	r16, 0xFC	; 252
 424:	1f 4f       	sbci	r17, 0xFF	; 255
 426:	06 c0       	rjmp	.+12     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 428:	60 81       	ld	r22, Z
 42a:	71 81       	ldd	r23, Z+1	; 0x01
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 5f       	subi	r16, 0xFE	; 254
 432:	1f 4f       	sbci	r17, 0xFF	; 255
 434:	a3 01       	movw	r20, r6
 436:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__ultoa_invert>
 43a:	88 2e       	mov	r8, r24
 43c:	86 18       	sub	r8, r6
 43e:	fb 2d       	mov	r31, r11
 440:	ff 77       	andi	r31, 0x7F	; 127
 442:	3f 2e       	mov	r3, r31
 444:	36 fe       	sbrs	r3, 6
 446:	0d c0       	rjmp	.+26     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 448:	23 2d       	mov	r18, r3
 44a:	2e 7f       	andi	r18, 0xFE	; 254
 44c:	a2 2e       	mov	r10, r18
 44e:	89 14       	cp	r8, r9
 450:	58 f4       	brcc	.+22     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 452:	34 fe       	sbrs	r3, 4
 454:	0b c0       	rjmp	.+22     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 456:	32 fc       	sbrc	r3, 2
 458:	09 c0       	rjmp	.+18     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45a:	83 2d       	mov	r24, r3
 45c:	8e 7e       	andi	r24, 0xEE	; 238
 45e:	a8 2e       	mov	r10, r24
 460:	05 c0       	rjmp	.+10     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 462:	b8 2c       	mov	r11, r8
 464:	a3 2c       	mov	r10, r3
 466:	03 c0       	rjmp	.+6      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 468:	b8 2c       	mov	r11, r8
 46a:	01 c0       	rjmp	.+2      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 46c:	b9 2c       	mov	r11, r9
 46e:	a4 fe       	sbrs	r10, 4
 470:	0f c0       	rjmp	.+30     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 472:	fe 01       	movw	r30, r28
 474:	e8 0d       	add	r30, r8
 476:	f1 1d       	adc	r31, r1
 478:	80 81       	ld	r24, Z
 47a:	80 33       	cpi	r24, 0x30	; 48
 47c:	21 f4       	brne	.+8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47e:	9a 2d       	mov	r25, r10
 480:	99 7e       	andi	r25, 0xE9	; 233
 482:	a9 2e       	mov	r10, r25
 484:	09 c0       	rjmp	.+18     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 486:	a2 fe       	sbrs	r10, 2
 488:	06 c0       	rjmp	.+12     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48a:	b3 94       	inc	r11
 48c:	b3 94       	inc	r11
 48e:	04 c0       	rjmp	.+8      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 490:	8a 2d       	mov	r24, r10
 492:	86 78       	andi	r24, 0x86	; 134
 494:	09 f0       	breq	.+2      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 496:	b3 94       	inc	r11
 498:	a3 fc       	sbrc	r10, 3
 49a:	11 c0       	rjmp	.+34     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 49c:	a0 fe       	sbrs	r10, 0
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	b2 14       	cp	r11, r2
 4a2:	88 f4       	brcc	.+34     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4a4:	28 0c       	add	r2, r8
 4a6:	92 2c       	mov	r9, r2
 4a8:	9b 18       	sub	r9, r11
 4aa:	0e c0       	rjmp	.+28     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4ac:	b2 14       	cp	r11, r2
 4ae:	60 f4       	brcc	.+24     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b0:	b6 01       	movw	r22, r12
 4b2:	80 e2       	ldi	r24, 0x20	; 32
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 4ba:	b3 94       	inc	r11
 4bc:	f7 cf       	rjmp	.-18     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4be:	b2 14       	cp	r11, r2
 4c0:	18 f4       	brcc	.+6      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c2:	2b 18       	sub	r2, r11
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c6:	98 2c       	mov	r9, r8
 4c8:	21 2c       	mov	r2, r1
 4ca:	a4 fe       	sbrs	r10, 4
 4cc:	10 c0       	rjmp	.+32     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ce:	b6 01       	movw	r22, r12
 4d0:	80 e3       	ldi	r24, 0x30	; 48
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 4d8:	a2 fe       	sbrs	r10, 2
 4da:	17 c0       	rjmp	.+46     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4dc:	a1 fc       	sbrc	r10, 1
 4de:	03 c0       	rjmp	.+6      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e0:	88 e7       	ldi	r24, 0x78	; 120
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	02 c0       	rjmp	.+4      	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4e6:	88 e5       	ldi	r24, 0x58	; 88
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	b6 01       	movw	r22, r12
 4ec:	0c c0       	rjmp	.+24     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4ee:	8a 2d       	mov	r24, r10
 4f0:	86 78       	andi	r24, 0x86	; 134
 4f2:	59 f0       	breq	.+22     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4f4:	a1 fe       	sbrs	r10, 1
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	8b e2       	ldi	r24, 0x2B	; 43
 4fa:	01 c0       	rjmp	.+2      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fc:	80 e2       	ldi	r24, 0x20	; 32
 4fe:	a7 fc       	sbrc	r10, 7
 500:	8d e2       	ldi	r24, 0x2D	; 45
 502:	b6 01       	movw	r22, r12
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 50a:	89 14       	cp	r8, r9
 50c:	38 f4       	brcc	.+14     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 50e:	b6 01       	movw	r22, r12
 510:	80 e3       	ldi	r24, 0x30	; 48
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 518:	9a 94       	dec	r9
 51a:	f7 cf       	rjmp	.-18     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 51c:	8a 94       	dec	r8
 51e:	f3 01       	movw	r30, r6
 520:	e8 0d       	add	r30, r8
 522:	f1 1d       	adc	r31, r1
 524:	80 81       	ld	r24, Z
 526:	b6 01       	movw	r22, r12
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 52e:	81 10       	cpse	r8, r1
 530:	f5 cf       	rjmp	.-22     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 532:	22 20       	and	r2, r2
 534:	09 f4       	brne	.+2      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 536:	42 ce       	rjmp	.-892    	; 0x1bc <vfprintf+0x24>
 538:	b6 01       	movw	r22, r12
 53a:	80 e2       	ldi	r24, 0x20	; 32
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 c3 02 	call	0x586	; 0x586 <fputc>
 542:	2a 94       	dec	r2
 544:	f6 cf       	rjmp	.-20     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 546:	f6 01       	movw	r30, r12
 548:	86 81       	ldd	r24, Z+6	; 0x06
 54a:	97 81       	ldd	r25, Z+7	; 0x07
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54e:	8f ef       	ldi	r24, 0xFF	; 255
 550:	9f ef       	ldi	r25, 0xFF	; 255
 552:	2b 96       	adiw	r28, 0x0b	; 11
 554:	e2 e1       	ldi	r30, 0x12	; 18
 556:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__epilogue_restores__>

0000055a <strnlen_P>:
 55a:	fc 01       	movw	r30, r24
 55c:	05 90       	lpm	r0, Z+
 55e:	61 50       	subi	r22, 0x01	; 1
 560:	70 40       	sbci	r23, 0x00	; 0
 562:	01 10       	cpse	r0, r1
 564:	d8 f7       	brcc	.-10     	; 0x55c <strnlen_P+0x2>
 566:	80 95       	com	r24
 568:	90 95       	com	r25
 56a:	8e 0f       	add	r24, r30
 56c:	9f 1f       	adc	r25, r31
 56e:	08 95       	ret

00000570 <strnlen>:
 570:	fc 01       	movw	r30, r24
 572:	61 50       	subi	r22, 0x01	; 1
 574:	70 40       	sbci	r23, 0x00	; 0
 576:	01 90       	ld	r0, Z+
 578:	01 10       	cpse	r0, r1
 57a:	d8 f7       	brcc	.-10     	; 0x572 <strnlen+0x2>
 57c:	80 95       	com	r24
 57e:	90 95       	com	r25
 580:	8e 0f       	add	r24, r30
 582:	9f 1f       	adc	r25, r31
 584:	08 95       	ret

00000586 <fputc>:
 586:	0f 93       	push	r16
 588:	1f 93       	push	r17
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	fb 01       	movw	r30, r22
 590:	23 81       	ldd	r18, Z+3	; 0x03
 592:	21 fd       	sbrc	r18, 1
 594:	03 c0       	rjmp	.+6      	; 0x59c <fputc+0x16>
 596:	8f ef       	ldi	r24, 0xFF	; 255
 598:	9f ef       	ldi	r25, 0xFF	; 255
 59a:	2c c0       	rjmp	.+88     	; 0x5f4 <fputc+0x6e>
 59c:	22 ff       	sbrs	r18, 2
 59e:	16 c0       	rjmp	.+44     	; 0x5cc <fputc+0x46>
 5a0:	46 81       	ldd	r20, Z+6	; 0x06
 5a2:	57 81       	ldd	r21, Z+7	; 0x07
 5a4:	24 81       	ldd	r18, Z+4	; 0x04
 5a6:	35 81       	ldd	r19, Z+5	; 0x05
 5a8:	42 17       	cp	r20, r18
 5aa:	53 07       	cpc	r21, r19
 5ac:	44 f4       	brge	.+16     	; 0x5be <fputc+0x38>
 5ae:	a0 81       	ld	r26, Z
 5b0:	b1 81       	ldd	r27, Z+1	; 0x01
 5b2:	9d 01       	movw	r18, r26
 5b4:	2f 5f       	subi	r18, 0xFF	; 255
 5b6:	3f 4f       	sbci	r19, 0xFF	; 255
 5b8:	31 83       	std	Z+1, r19	; 0x01
 5ba:	20 83       	st	Z, r18
 5bc:	8c 93       	st	X, r24
 5be:	26 81       	ldd	r18, Z+6	; 0x06
 5c0:	37 81       	ldd	r19, Z+7	; 0x07
 5c2:	2f 5f       	subi	r18, 0xFF	; 255
 5c4:	3f 4f       	sbci	r19, 0xFF	; 255
 5c6:	37 83       	std	Z+7, r19	; 0x07
 5c8:	26 83       	std	Z+6, r18	; 0x06
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <fputc+0x6e>
 5cc:	8b 01       	movw	r16, r22
 5ce:	ec 01       	movw	r28, r24
 5d0:	fb 01       	movw	r30, r22
 5d2:	00 84       	ldd	r0, Z+8	; 0x08
 5d4:	f1 85       	ldd	r31, Z+9	; 0x09
 5d6:	e0 2d       	mov	r30, r0
 5d8:	09 95       	icall
 5da:	89 2b       	or	r24, r25
 5dc:	e1 f6       	brne	.-72     	; 0x596 <fputc+0x10>
 5de:	d8 01       	movw	r26, r16
 5e0:	16 96       	adiw	r26, 0x06	; 6
 5e2:	8d 91       	ld	r24, X+
 5e4:	9c 91       	ld	r25, X
 5e6:	17 97       	sbiw	r26, 0x07	; 7
 5e8:	01 96       	adiw	r24, 0x01	; 1
 5ea:	17 96       	adiw	r26, 0x07	; 7
 5ec:	9c 93       	st	X, r25
 5ee:	8e 93       	st	-X, r24
 5f0:	16 97       	sbiw	r26, 0x06	; 6
 5f2:	ce 01       	movw	r24, r28
 5f4:	df 91       	pop	r29
 5f6:	cf 91       	pop	r28
 5f8:	1f 91       	pop	r17
 5fa:	0f 91       	pop	r16
 5fc:	08 95       	ret

000005fe <__ultoa_invert>:
 5fe:	fa 01       	movw	r30, r20
 600:	aa 27       	eor	r26, r26
 602:	28 30       	cpi	r18, 0x08	; 8
 604:	51 f1       	breq	.+84     	; 0x65a <__ultoa_invert+0x5c>
 606:	20 31       	cpi	r18, 0x10	; 16
 608:	81 f1       	breq	.+96     	; 0x66a <__ultoa_invert+0x6c>
 60a:	e8 94       	clt
 60c:	6f 93       	push	r22
 60e:	6e 7f       	andi	r22, 0xFE	; 254
 610:	6e 5f       	subi	r22, 0xFE	; 254
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	8f 4f       	sbci	r24, 0xFF	; 255
 616:	9f 4f       	sbci	r25, 0xFF	; 255
 618:	af 4f       	sbci	r26, 0xFF	; 255
 61a:	b1 e0       	ldi	r27, 0x01	; 1
 61c:	3e d0       	rcall	.+124    	; 0x69a <__ultoa_invert+0x9c>
 61e:	b4 e0       	ldi	r27, 0x04	; 4
 620:	3c d0       	rcall	.+120    	; 0x69a <__ultoa_invert+0x9c>
 622:	67 0f       	add	r22, r23
 624:	78 1f       	adc	r23, r24
 626:	89 1f       	adc	r24, r25
 628:	9a 1f       	adc	r25, r26
 62a:	a1 1d       	adc	r26, r1
 62c:	68 0f       	add	r22, r24
 62e:	79 1f       	adc	r23, r25
 630:	8a 1f       	adc	r24, r26
 632:	91 1d       	adc	r25, r1
 634:	a1 1d       	adc	r26, r1
 636:	6a 0f       	add	r22, r26
 638:	71 1d       	adc	r23, r1
 63a:	81 1d       	adc	r24, r1
 63c:	91 1d       	adc	r25, r1
 63e:	a1 1d       	adc	r26, r1
 640:	20 d0       	rcall	.+64     	; 0x682 <__ultoa_invert+0x84>
 642:	09 f4       	brne	.+2      	; 0x646 <__ultoa_invert+0x48>
 644:	68 94       	set
 646:	3f 91       	pop	r19
 648:	2a e0       	ldi	r18, 0x0A	; 10
 64a:	26 9f       	mul	r18, r22
 64c:	11 24       	eor	r1, r1
 64e:	30 19       	sub	r19, r0
 650:	30 5d       	subi	r19, 0xD0	; 208
 652:	31 93       	st	Z+, r19
 654:	de f6       	brtc	.-74     	; 0x60c <__ultoa_invert+0xe>
 656:	cf 01       	movw	r24, r30
 658:	08 95       	ret
 65a:	46 2f       	mov	r20, r22
 65c:	47 70       	andi	r20, 0x07	; 7
 65e:	40 5d       	subi	r20, 0xD0	; 208
 660:	41 93       	st	Z+, r20
 662:	b3 e0       	ldi	r27, 0x03	; 3
 664:	0f d0       	rcall	.+30     	; 0x684 <__ultoa_invert+0x86>
 666:	c9 f7       	brne	.-14     	; 0x65a <__ultoa_invert+0x5c>
 668:	f6 cf       	rjmp	.-20     	; 0x656 <__ultoa_invert+0x58>
 66a:	46 2f       	mov	r20, r22
 66c:	4f 70       	andi	r20, 0x0F	; 15
 66e:	40 5d       	subi	r20, 0xD0	; 208
 670:	4a 33       	cpi	r20, 0x3A	; 58
 672:	18 f0       	brcs	.+6      	; 0x67a <__ultoa_invert+0x7c>
 674:	49 5d       	subi	r20, 0xD9	; 217
 676:	31 fd       	sbrc	r19, 1
 678:	40 52       	subi	r20, 0x20	; 32
 67a:	41 93       	st	Z+, r20
 67c:	02 d0       	rcall	.+4      	; 0x682 <__ultoa_invert+0x84>
 67e:	a9 f7       	brne	.-22     	; 0x66a <__ultoa_invert+0x6c>
 680:	ea cf       	rjmp	.-44     	; 0x656 <__ultoa_invert+0x58>
 682:	b4 e0       	ldi	r27, 0x04	; 4
 684:	a6 95       	lsr	r26
 686:	97 95       	ror	r25
 688:	87 95       	ror	r24
 68a:	77 95       	ror	r23
 68c:	67 95       	ror	r22
 68e:	ba 95       	dec	r27
 690:	c9 f7       	brne	.-14     	; 0x684 <__ultoa_invert+0x86>
 692:	00 97       	sbiw	r24, 0x00	; 0
 694:	61 05       	cpc	r22, r1
 696:	71 05       	cpc	r23, r1
 698:	08 95       	ret
 69a:	9b 01       	movw	r18, r22
 69c:	ac 01       	movw	r20, r24
 69e:	0a 2e       	mov	r0, r26
 6a0:	06 94       	lsr	r0
 6a2:	57 95       	ror	r21
 6a4:	47 95       	ror	r20
 6a6:	37 95       	ror	r19
 6a8:	27 95       	ror	r18
 6aa:	ba 95       	dec	r27
 6ac:	c9 f7       	brne	.-14     	; 0x6a0 <__ultoa_invert+0xa2>
 6ae:	62 0f       	add	r22, r18
 6b0:	73 1f       	adc	r23, r19
 6b2:	84 1f       	adc	r24, r20
 6b4:	95 1f       	adc	r25, r21
 6b6:	a0 1d       	adc	r26, r0
 6b8:	08 95       	ret

000006ba <__prologue_saves__>:
 6ba:	2f 92       	push	r2
 6bc:	3f 92       	push	r3
 6be:	4f 92       	push	r4
 6c0:	5f 92       	push	r5
 6c2:	6f 92       	push	r6
 6c4:	7f 92       	push	r7
 6c6:	8f 92       	push	r8
 6c8:	9f 92       	push	r9
 6ca:	af 92       	push	r10
 6cc:	bf 92       	push	r11
 6ce:	cf 92       	push	r12
 6d0:	df 92       	push	r13
 6d2:	ef 92       	push	r14
 6d4:	ff 92       	push	r15
 6d6:	0f 93       	push	r16
 6d8:	1f 93       	push	r17
 6da:	cf 93       	push	r28
 6dc:	df 93       	push	r29
 6de:	cd b7       	in	r28, 0x3d	; 61
 6e0:	de b7       	in	r29, 0x3e	; 62
 6e2:	ca 1b       	sub	r28, r26
 6e4:	db 0b       	sbc	r29, r27
 6e6:	0f b6       	in	r0, 0x3f	; 63
 6e8:	f8 94       	cli
 6ea:	de bf       	out	0x3e, r29	; 62
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	cd bf       	out	0x3d, r28	; 61
 6f0:	09 94       	ijmp

000006f2 <__epilogue_restores__>:
 6f2:	2a 88       	ldd	r2, Y+18	; 0x12
 6f4:	39 88       	ldd	r3, Y+17	; 0x11
 6f6:	48 88       	ldd	r4, Y+16	; 0x10
 6f8:	5f 84       	ldd	r5, Y+15	; 0x0f
 6fa:	6e 84       	ldd	r6, Y+14	; 0x0e
 6fc:	7d 84       	ldd	r7, Y+13	; 0x0d
 6fe:	8c 84       	ldd	r8, Y+12	; 0x0c
 700:	9b 84       	ldd	r9, Y+11	; 0x0b
 702:	aa 84       	ldd	r10, Y+10	; 0x0a
 704:	b9 84       	ldd	r11, Y+9	; 0x09
 706:	c8 84       	ldd	r12, Y+8	; 0x08
 708:	df 80       	ldd	r13, Y+7	; 0x07
 70a:	ee 80       	ldd	r14, Y+6	; 0x06
 70c:	fd 80       	ldd	r15, Y+5	; 0x05
 70e:	0c 81       	ldd	r16, Y+4	; 0x04
 710:	1b 81       	ldd	r17, Y+3	; 0x03
 712:	aa 81       	ldd	r26, Y+2	; 0x02
 714:	b9 81       	ldd	r27, Y+1	; 0x01
 716:	ce 0f       	add	r28, r30
 718:	d1 1d       	adc	r29, r1
 71a:	0f b6       	in	r0, 0x3f	; 63
 71c:	f8 94       	cli
 71e:	de bf       	out	0x3e, r29	; 62
 720:	0f be       	out	0x3f, r0	; 63
 722:	cd bf       	out	0x3d, r28	; 61
 724:	ed 01       	movw	r28, r26
 726:	08 95       	ret

00000728 <_exit>:
 728:	f8 94       	cli

0000072a <__stop_program>:
 72a:	ff cf       	rjmp	.-2      	; 0x72a <__stop_program>
