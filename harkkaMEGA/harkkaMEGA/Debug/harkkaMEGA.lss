
harkkaMEGA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800200  000007c2  00000856  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800244  00800244  0000089a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000089a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f75  00000000  00000000  00000978  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d77  00000000  00000000  000018ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000043b  00000000  00000000  00002664  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00002aa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000665  00000000  00000000  00002b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d6  00000000  00000000  00003179  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000324f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 ec       	ldi	r30, 0xC2	; 194
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 34       	cpi	r26, 0x44	; 68
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e4       	ldi	r26, 0x44	; 68
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 34       	cpi	r26, 0x4A	; 74
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	2e d0       	rcall	.+92     	; 0x17c <main>
 120:	4e c3       	rjmp	.+1692   	; 0x7be <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 124:	e0 ec       	ldi	r30, 0xC0	; 192
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	90 81       	ld	r25, Z
 12a:	95 ff       	sbrs	r25, 5
 12c:	fd cf       	rjmp	.-6      	; 0x128 <USART_Transmit+0x4>
	{
		;
	}
	
	/* Puts the data into a buffer, then sends/transmits the data */
	UDR0 = data;
 12e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 132:	08 95       	ret

00000134 <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
	/* Wait until the transmit buffer is empty*/
	while(!(UCSR0A & (1 << UDRE0)))
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	85 ff       	sbrs	r24, 5
 13c:	fd cf       	rjmp	.-6      	; 0x138 <USART_Receive+0x4>
	{
		;
	}
	
	/* Get the received data from the buffer */
	return UDR0;
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
}
 142:	08 95       	ret

00000144 <SPI_MasterInit>:
/*****/

void SPI_MasterInit(void)
{
	/* Set pins SS(pin 50), MOSI(pin 51), SCK(pin 52) for output */ 
	DDRB |= (1 << PB0) | (1 << PB1) | (1 << PB2);
 144:	84 b1       	in	r24, 0x04	; 4
 146:	87 60       	ori	r24, 0x07	; 7
 148:	84 b9       	out	0x04, r24	; 4
	/* Set SPI enabled active and master/slave select to master */
	SPCR |= (1 << 6) | (1 << 4);
 14a:	8c b5       	in	r24, 0x2c	; 44
 14c:	80 65       	ori	r24, 0x50	; 80
 14e:	8c bd       	out	0x2c, r24	; 44
	/* Set SPI clock rate to 1 MHz */
	SPCR |= (1 << 0);
 150:	8c b5       	in	r24, 0x2c	; 44
 152:	81 60       	ori	r24, 0x01	; 1
 154:	8c bd       	out	0x2c, r24	; 44
 156:	08 95       	ret

00000158 <SPI_MasterTransmit>:

char SPI_MasterTransmit(char send[20])
{
	char recive[20];
	/* Start SPI communication by pulling SS to LOW */
	PORTB &= ~(1 << PB0);
 158:	28 98       	cbi	0x05, 0	; 5
	/* Start sending and receiving bytes until */
	for(int8_t spi_data_index = 0; spi_data_index < sizeof(send); spi_data_index++)
	{
		SPDR = send[spi_data_index]; /* Send byte */
 15a:	fc 01       	movw	r30, r24
 15c:	20 81       	ld	r18, Z
 15e:	2e bd       	out	0x2e, r18	; 46
		while(!(SPSR & (1 << SPIF)))
 160:	0d b4       	in	r0, 0x2d	; 45
 162:	07 fe       	sbrs	r0, 7
 164:	fd cf       	rjmp	.-6      	; 0x160 <SPI_MasterTransmit+0x8>
		{
			; /* Wait to recive byte */
		}
		
		recive[spi_data_index] = SPDR; /* Record received byte */
 166:	2e b5       	in	r18, 0x2e	; 46
	/* Start SPI communication by pulling SS to LOW */
	PORTB &= ~(1 << PB0);
	/* Start sending and receiving bytes until */
	for(int8_t spi_data_index = 0; spi_data_index < sizeof(send); spi_data_index++)
	{
		SPDR = send[spi_data_index]; /* Send byte */
 168:	fc 01       	movw	r30, r24
 16a:	81 81       	ldd	r24, Z+1	; 0x01
 16c:	8e bd       	out	0x2e, r24	; 46
		while(!(SPSR & (1 << SPIF)))
 16e:	0d b4       	in	r0, 0x2d	; 45
 170:	07 fe       	sbrs	r0, 7
 172:	fd cf       	rjmp	.-6      	; 0x16e <SPI_MasterTransmit+0x16>
		{
			; /* Wait to recive byte */
		}
		
		recive[spi_data_index] = SPDR; /* Record received byte */
 174:	8e b5       	in	r24, 0x2e	; 46
	}
	/* End SPI communication by pulling SS to HIGH */
	PORTB |= (1<<PB0);
 176:	28 9a       	sbi	0x05, 0	; 5
	/* Return received data */ 
	return recive;
}
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	08 95       	ret

0000017c <main>:

int main(void)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	a8 97       	sbiw	r28, 0x28	; 40
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
    char SPI_send_data[20] = "Status";
 190:	87 e0       	ldi	r24, 0x07	; 7
 192:	ec e1       	ldi	r30, 0x1C	; 28
 194:	f2 e0       	ldi	r31, 0x02	; 2
 196:	de 01       	movw	r26, r28
 198:	11 96       	adiw	r26, 0x01	; 1
 19a:	01 90       	ld	r0, Z+
 19c:	0d 92       	st	X+, r0
 19e:	8a 95       	dec	r24
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0x1e>
 1a2:	fe 01       	movw	r30, r28
 1a4:	38 96       	adiw	r30, 0x08	; 8
 1a6:	8d e0       	ldi	r24, 0x0D	; 13
 1a8:	df 01       	movw	r26, r30
 1aa:	1d 92       	st	X+, r1
 1ac:	8a 95       	dec	r24
 1ae:	e9 f7       	brne	.-6      	; 0x1aa <main+0x2e>
	char SPI_recive_data[20] = "No connection";
 1b0:	8e e0       	ldi	r24, 0x0E	; 14
 1b2:	e0 e3       	ldi	r30, 0x30	; 48
 1b4:	f2 e0       	ldi	r31, 0x02	; 2
 1b6:	de 01       	movw	r26, r28
 1b8:	55 96       	adiw	r26, 0x15	; 21
 1ba:	01 90       	ld	r0, Z+
 1bc:	0d 92       	st	X+, r0
 1be:	8a 95       	dec	r24
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <main+0x3e>
 1c2:	fe 01       	movw	r30, r28
 1c4:	b3 96       	adiw	r30, 0x23	; 35
 1c6:	86 e0       	ldi	r24, 0x06	; 6
 1c8:	df 01       	movw	r26, r30
 1ca:	1d 92       	st	X+, r1
 1cc:	8a 95       	dec	r24
 1ce:	e9 f7       	brne	.-6      	; 0x1ca <main+0x4e>
/*for usb serial*/
static void
USART_init(uint16_t ubrr)
{
	/* Set baud rate in the USART Baud Rate Registers (UBRR) */
	UBRR0H = (unsigned char) (ubrr >> 8);
 1d0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = (unsigned char) ubrr;
 1d4:	87 e6       	ldi	r24, 0x67	; 103
 1d6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	
	/* Enable receiver and transmitter on RX0 and TX0 */
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
 1da:	e1 ec       	ldi	r30, 0xC1	; 193
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	88 61       	ori	r24, 0x18	; 24
 1e2:	80 83       	st	Z, r24
	
	/* Set frame format: 8 bit data, 2 stop bit */
	UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 1e4:	e2 ec       	ldi	r30, 0xC2	; 194
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	8e 60       	ori	r24, 0x0E	; 14
 1ec:	80 83       	st	Z, r24
    char SPI_send_data[20] = "Status";
	char SPI_recive_data[20] = "No connection";
	/**/
	/*for usb serial*/
	USART_init(MYUBRR);
	stdout = &uart_output;
 1ee:	e4 e4       	ldi	r30, 0x44	; 68
 1f0:	f2 e0       	ldi	r31, 0x02	; 2
 1f2:	8e e0       	ldi	r24, 0x0E	; 14
 1f4:	92 e0       	ldi	r25, 0x02	; 2
 1f6:	93 83       	std	Z+3, r25	; 0x03
 1f8:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	92 e0       	ldi	r25, 0x02	; 2
 1fe:	91 83       	std	Z+1, r25	; 0x01
 200:	80 83       	st	Z, r24
	/**/
	SPI_MasterInit();
 202:	a0 df       	rcall	.-192    	; 0x144 <SPI_MasterInit>
	printf(SPI_recive_data);
 204:	ce 01       	movw	r24, r28
 206:	45 96       	adiw	r24, 0x15	; 21
 208:	9f 93       	push	r25
 20a:	8f 93       	push	r24
 20c:	18 d0       	rcall	.+48     	; 0x23e <printf>
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
    while (1) 
    {
		SPI_recive_data[20] = SPI_MasterTransmit(SPI_send_data);
		/* Wait to before next check */
		printf(SPI_recive_data);
 212:	8e 01       	movw	r16, r28
 214:	0b 5e       	subi	r16, 0xEB	; 235
 216:	1f 4f       	sbci	r17, 0xFF	; 255
	/**/
	SPI_MasterInit();
	printf(SPI_recive_data);
    while (1) 
    {
		SPI_recive_data[20] = SPI_MasterTransmit(SPI_send_data);
 218:	ce 01       	movw	r24, r28
 21a:	01 96       	adiw	r24, 0x01	; 1
 21c:	9d df       	rcall	.-198    	; 0x158 <SPI_MasterTransmit>
 21e:	89 a7       	std	Y+41, r24	; 0x29
		/* Wait to before next check */
		printf(SPI_recive_data);
 220:	1f 93       	push	r17
 222:	0f 93       	push	r16
 224:	0c d0       	rcall	.+24     	; 0x23e <printf>
 226:	bf ef       	ldi	r27, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 228:	27 ea       	ldi	r18, 0xA7	; 167
 22a:	81 e6       	ldi	r24, 0x61	; 97
 22c:	b1 50       	subi	r27, 0x01	; 1
 22e:	20 40       	sbci	r18, 0x00	; 0
 230:	80 40       	sbci	r24, 0x00	; 0
 232:	e1 f7       	brne	.-8      	; 0x22c <main+0xb0>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0xba>
 236:	00 00       	nop
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	ed cf       	rjmp	.-38     	; 0x218 <main+0x9c>

0000023e <printf>:
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	cd b7       	in	r28, 0x3d	; 61
 244:	de b7       	in	r29, 0x3e	; 62
 246:	ae 01       	movw	r20, r28
 248:	4a 5f       	subi	r20, 0xFA	; 250
 24a:	5f 4f       	sbci	r21, 0xFF	; 255
 24c:	fa 01       	movw	r30, r20
 24e:	61 91       	ld	r22, Z+
 250:	71 91       	ld	r23, Z+
 252:	af 01       	movw	r20, r30
 254:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <__data_end+0x2>
 258:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <__data_end+0x3>
 25c:	03 d0       	rcall	.+6      	; 0x264 <vfprintf>
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	08 95       	ret

00000264 <vfprintf>:
 264:	2f 92       	push	r2
 266:	3f 92       	push	r3
 268:	4f 92       	push	r4
 26a:	5f 92       	push	r5
 26c:	6f 92       	push	r6
 26e:	7f 92       	push	r7
 270:	8f 92       	push	r8
 272:	9f 92       	push	r9
 274:	af 92       	push	r10
 276:	bf 92       	push	r11
 278:	cf 92       	push	r12
 27a:	df 92       	push	r13
 27c:	ef 92       	push	r14
 27e:	ff 92       	push	r15
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	2b 97       	sbiw	r28, 0x0b	; 11
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
 298:	6c 01       	movw	r12, r24
 29a:	7b 01       	movw	r14, r22
 29c:	8a 01       	movw	r16, r20
 29e:	fc 01       	movw	r30, r24
 2a0:	17 82       	std	Z+7, r1	; 0x07
 2a2:	16 82       	std	Z+6, r1	; 0x06
 2a4:	83 81       	ldd	r24, Z+3	; 0x03
 2a6:	81 ff       	sbrs	r24, 1
 2a8:	bf c1       	rjmp	.+894    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 2aa:	ce 01       	movw	r24, r28
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	3c 01       	movw	r6, r24
 2b0:	f6 01       	movw	r30, r12
 2b2:	93 81       	ldd	r25, Z+3	; 0x03
 2b4:	f7 01       	movw	r30, r14
 2b6:	93 fd       	sbrc	r25, 3
 2b8:	85 91       	lpm	r24, Z+
 2ba:	93 ff       	sbrs	r25, 3
 2bc:	81 91       	ld	r24, Z+
 2be:	7f 01       	movw	r14, r30
 2c0:	88 23       	and	r24, r24
 2c2:	09 f4       	brne	.+2      	; 0x2c6 <vfprintf+0x62>
 2c4:	ad c1       	rjmp	.+858    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 2c6:	85 32       	cpi	r24, 0x25	; 37
 2c8:	39 f4       	brne	.+14     	; 0x2d8 <vfprintf+0x74>
 2ca:	93 fd       	sbrc	r25, 3
 2cc:	85 91       	lpm	r24, Z+
 2ce:	93 ff       	sbrs	r25, 3
 2d0:	81 91       	ld	r24, Z+
 2d2:	7f 01       	movw	r14, r30
 2d4:	85 32       	cpi	r24, 0x25	; 37
 2d6:	21 f4       	brne	.+8      	; 0x2e0 <vfprintf+0x7c>
 2d8:	b6 01       	movw	r22, r12
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	d6 d1       	rcall	.+940    	; 0x68a <fputc>
 2de:	e8 cf       	rjmp	.-48     	; 0x2b0 <vfprintf+0x4c>
 2e0:	91 2c       	mov	r9, r1
 2e2:	21 2c       	mov	r2, r1
 2e4:	31 2c       	mov	r3, r1
 2e6:	ff e1       	ldi	r31, 0x1F	; 31
 2e8:	f3 15       	cp	r31, r3
 2ea:	d8 f0       	brcs	.+54     	; 0x322 <vfprintf+0xbe>
 2ec:	8b 32       	cpi	r24, 0x2B	; 43
 2ee:	79 f0       	breq	.+30     	; 0x30e <vfprintf+0xaa>
 2f0:	38 f4       	brcc	.+14     	; 0x300 <vfprintf+0x9c>
 2f2:	80 32       	cpi	r24, 0x20	; 32
 2f4:	79 f0       	breq	.+30     	; 0x314 <vfprintf+0xb0>
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	a1 f4       	brne	.+40     	; 0x322 <vfprintf+0xbe>
 2fa:	23 2d       	mov	r18, r3
 2fc:	20 61       	ori	r18, 0x10	; 16
 2fe:	1d c0       	rjmp	.+58     	; 0x33a <vfprintf+0xd6>
 300:	8d 32       	cpi	r24, 0x2D	; 45
 302:	61 f0       	breq	.+24     	; 0x31c <vfprintf+0xb8>
 304:	80 33       	cpi	r24, 0x30	; 48
 306:	69 f4       	brne	.+26     	; 0x322 <vfprintf+0xbe>
 308:	23 2d       	mov	r18, r3
 30a:	21 60       	ori	r18, 0x01	; 1
 30c:	16 c0       	rjmp	.+44     	; 0x33a <vfprintf+0xd6>
 30e:	83 2d       	mov	r24, r3
 310:	82 60       	ori	r24, 0x02	; 2
 312:	38 2e       	mov	r3, r24
 314:	e3 2d       	mov	r30, r3
 316:	e4 60       	ori	r30, 0x04	; 4
 318:	3e 2e       	mov	r3, r30
 31a:	2a c0       	rjmp	.+84     	; 0x370 <vfprintf+0x10c>
 31c:	f3 2d       	mov	r31, r3
 31e:	f8 60       	ori	r31, 0x08	; 8
 320:	1d c0       	rjmp	.+58     	; 0x35c <vfprintf+0xf8>
 322:	37 fc       	sbrc	r3, 7
 324:	2d c0       	rjmp	.+90     	; 0x380 <vfprintf+0x11c>
 326:	20 ed       	ldi	r18, 0xD0	; 208
 328:	28 0f       	add	r18, r24
 32a:	2a 30       	cpi	r18, 0x0A	; 10
 32c:	40 f0       	brcs	.+16     	; 0x33e <vfprintf+0xda>
 32e:	8e 32       	cpi	r24, 0x2E	; 46
 330:	b9 f4       	brne	.+46     	; 0x360 <vfprintf+0xfc>
 332:	36 fc       	sbrc	r3, 6
 334:	75 c1       	rjmp	.+746    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 336:	23 2d       	mov	r18, r3
 338:	20 64       	ori	r18, 0x40	; 64
 33a:	32 2e       	mov	r3, r18
 33c:	19 c0       	rjmp	.+50     	; 0x370 <vfprintf+0x10c>
 33e:	36 fe       	sbrs	r3, 6
 340:	06 c0       	rjmp	.+12     	; 0x34e <vfprintf+0xea>
 342:	8a e0       	ldi	r24, 0x0A	; 10
 344:	98 9e       	mul	r9, r24
 346:	20 0d       	add	r18, r0
 348:	11 24       	eor	r1, r1
 34a:	92 2e       	mov	r9, r18
 34c:	11 c0       	rjmp	.+34     	; 0x370 <vfprintf+0x10c>
 34e:	ea e0       	ldi	r30, 0x0A	; 10
 350:	2e 9e       	mul	r2, r30
 352:	20 0d       	add	r18, r0
 354:	11 24       	eor	r1, r1
 356:	22 2e       	mov	r2, r18
 358:	f3 2d       	mov	r31, r3
 35a:	f0 62       	ori	r31, 0x20	; 32
 35c:	3f 2e       	mov	r3, r31
 35e:	08 c0       	rjmp	.+16     	; 0x370 <vfprintf+0x10c>
 360:	8c 36       	cpi	r24, 0x6C	; 108
 362:	21 f4       	brne	.+8      	; 0x36c <vfprintf+0x108>
 364:	83 2d       	mov	r24, r3
 366:	80 68       	ori	r24, 0x80	; 128
 368:	38 2e       	mov	r3, r24
 36a:	02 c0       	rjmp	.+4      	; 0x370 <vfprintf+0x10c>
 36c:	88 36       	cpi	r24, 0x68	; 104
 36e:	41 f4       	brne	.+16     	; 0x380 <vfprintf+0x11c>
 370:	f7 01       	movw	r30, r14
 372:	93 fd       	sbrc	r25, 3
 374:	85 91       	lpm	r24, Z+
 376:	93 ff       	sbrs	r25, 3
 378:	81 91       	ld	r24, Z+
 37a:	7f 01       	movw	r14, r30
 37c:	81 11       	cpse	r24, r1
 37e:	b3 cf       	rjmp	.-154    	; 0x2e6 <vfprintf+0x82>
 380:	98 2f       	mov	r25, r24
 382:	9f 7d       	andi	r25, 0xDF	; 223
 384:	95 54       	subi	r25, 0x45	; 69
 386:	93 30       	cpi	r25, 0x03	; 3
 388:	28 f4       	brcc	.+10     	; 0x394 <vfprintf+0x130>
 38a:	0c 5f       	subi	r16, 0xFC	; 252
 38c:	1f 4f       	sbci	r17, 0xFF	; 255
 38e:	9f e3       	ldi	r25, 0x3F	; 63
 390:	99 83       	std	Y+1, r25	; 0x01
 392:	0d c0       	rjmp	.+26     	; 0x3ae <vfprintf+0x14a>
 394:	83 36       	cpi	r24, 0x63	; 99
 396:	31 f0       	breq	.+12     	; 0x3a4 <vfprintf+0x140>
 398:	83 37       	cpi	r24, 0x73	; 115
 39a:	71 f0       	breq	.+28     	; 0x3b8 <vfprintf+0x154>
 39c:	83 35       	cpi	r24, 0x53	; 83
 39e:	09 f0       	breq	.+2      	; 0x3a2 <vfprintf+0x13e>
 3a0:	55 c0       	rjmp	.+170    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 3a2:	20 c0       	rjmp	.+64     	; 0x3e4 <vfprintf+0x180>
 3a4:	f8 01       	movw	r30, r16
 3a6:	80 81       	ld	r24, Z
 3a8:	89 83       	std	Y+1, r24	; 0x01
 3aa:	0e 5f       	subi	r16, 0xFE	; 254
 3ac:	1f 4f       	sbci	r17, 0xFF	; 255
 3ae:	88 24       	eor	r8, r8
 3b0:	83 94       	inc	r8
 3b2:	91 2c       	mov	r9, r1
 3b4:	53 01       	movw	r10, r6
 3b6:	12 c0       	rjmp	.+36     	; 0x3dc <vfprintf+0x178>
 3b8:	28 01       	movw	r4, r16
 3ba:	f2 e0       	ldi	r31, 0x02	; 2
 3bc:	4f 0e       	add	r4, r31
 3be:	51 1c       	adc	r5, r1
 3c0:	f8 01       	movw	r30, r16
 3c2:	a0 80       	ld	r10, Z
 3c4:	b1 80       	ldd	r11, Z+1	; 0x01
 3c6:	36 fe       	sbrs	r3, 6
 3c8:	03 c0       	rjmp	.+6      	; 0x3d0 <vfprintf+0x16c>
 3ca:	69 2d       	mov	r22, r9
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <vfprintf+0x170>
 3d0:	6f ef       	ldi	r22, 0xFF	; 255
 3d2:	7f ef       	ldi	r23, 0xFF	; 255
 3d4:	c5 01       	movw	r24, r10
 3d6:	4e d1       	rcall	.+668    	; 0x674 <strnlen>
 3d8:	4c 01       	movw	r8, r24
 3da:	82 01       	movw	r16, r4
 3dc:	f3 2d       	mov	r31, r3
 3de:	ff 77       	andi	r31, 0x7F	; 127
 3e0:	3f 2e       	mov	r3, r31
 3e2:	15 c0       	rjmp	.+42     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e4:	28 01       	movw	r4, r16
 3e6:	22 e0       	ldi	r18, 0x02	; 2
 3e8:	42 0e       	add	r4, r18
 3ea:	51 1c       	adc	r5, r1
 3ec:	f8 01       	movw	r30, r16
 3ee:	a0 80       	ld	r10, Z
 3f0:	b1 80       	ldd	r11, Z+1	; 0x01
 3f2:	36 fe       	sbrs	r3, 6
 3f4:	03 c0       	rjmp	.+6      	; 0x3fc <vfprintf+0x198>
 3f6:	69 2d       	mov	r22, r9
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	6f ef       	ldi	r22, 0xFF	; 255
 3fe:	7f ef       	ldi	r23, 0xFF	; 255
 400:	c5 01       	movw	r24, r10
 402:	2d d1       	rcall	.+602    	; 0x65e <strnlen_P>
 404:	4c 01       	movw	r8, r24
 406:	f3 2d       	mov	r31, r3
 408:	f0 68       	ori	r31, 0x80	; 128
 40a:	3f 2e       	mov	r3, r31
 40c:	82 01       	movw	r16, r4
 40e:	33 fc       	sbrc	r3, 3
 410:	19 c0       	rjmp	.+50     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 412:	82 2d       	mov	r24, r2
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	88 16       	cp	r8, r24
 418:	99 06       	cpc	r9, r25
 41a:	a0 f4       	brcc	.+40     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 41c:	b6 01       	movw	r22, r12
 41e:	80 e2       	ldi	r24, 0x20	; 32
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	33 d1       	rcall	.+614    	; 0x68a <fputc>
 424:	2a 94       	dec	r2
 426:	f5 cf       	rjmp	.-22     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 428:	f5 01       	movw	r30, r10
 42a:	37 fc       	sbrc	r3, 7
 42c:	85 91       	lpm	r24, Z+
 42e:	37 fe       	sbrs	r3, 7
 430:	81 91       	ld	r24, Z+
 432:	5f 01       	movw	r10, r30
 434:	b6 01       	movw	r22, r12
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	28 d1       	rcall	.+592    	; 0x68a <fputc>
 43a:	21 10       	cpse	r2, r1
 43c:	2a 94       	dec	r2
 43e:	21 e0       	ldi	r18, 0x01	; 1
 440:	82 1a       	sub	r8, r18
 442:	91 08       	sbc	r9, r1
 444:	81 14       	cp	r8, r1
 446:	91 04       	cpc	r9, r1
 448:	79 f7       	brne	.-34     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 44a:	e1 c0       	rjmp	.+450    	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 44c:	84 36       	cpi	r24, 0x64	; 100
 44e:	11 f0       	breq	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 450:	89 36       	cpi	r24, 0x69	; 105
 452:	39 f5       	brne	.+78     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 454:	f8 01       	movw	r30, r16
 456:	37 fe       	sbrs	r3, 7
 458:	07 c0       	rjmp	.+14     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45a:	60 81       	ld	r22, Z
 45c:	71 81       	ldd	r23, Z+1	; 0x01
 45e:	82 81       	ldd	r24, Z+2	; 0x02
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	0c 5f       	subi	r16, 0xFC	; 252
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	08 c0       	rjmp	.+16     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 468:	60 81       	ld	r22, Z
 46a:	71 81       	ldd	r23, Z+1	; 0x01
 46c:	07 2e       	mov	r0, r23
 46e:	00 0c       	add	r0, r0
 470:	88 0b       	sbc	r24, r24
 472:	99 0b       	sbc	r25, r25
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	f3 2d       	mov	r31, r3
 47a:	ff 76       	andi	r31, 0x6F	; 111
 47c:	3f 2e       	mov	r3, r31
 47e:	97 ff       	sbrs	r25, 7
 480:	09 c0       	rjmp	.+18     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 482:	90 95       	com	r25
 484:	80 95       	com	r24
 486:	70 95       	com	r23
 488:	61 95       	neg	r22
 48a:	7f 4f       	sbci	r23, 0xFF	; 255
 48c:	8f 4f       	sbci	r24, 0xFF	; 255
 48e:	9f 4f       	sbci	r25, 0xFF	; 255
 490:	f0 68       	ori	r31, 0x80	; 128
 492:	3f 2e       	mov	r3, r31
 494:	2a e0       	ldi	r18, 0x0A	; 10
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	a3 01       	movw	r20, r6
 49a:	33 d1       	rcall	.+614    	; 0x702 <__ultoa_invert>
 49c:	88 2e       	mov	r8, r24
 49e:	86 18       	sub	r8, r6
 4a0:	44 c0       	rjmp	.+136    	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 4a2:	85 37       	cpi	r24, 0x75	; 117
 4a4:	31 f4       	brne	.+12     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a6:	23 2d       	mov	r18, r3
 4a8:	2f 7e       	andi	r18, 0xEF	; 239
 4aa:	b2 2e       	mov	r11, r18
 4ac:	2a e0       	ldi	r18, 0x0A	; 10
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	25 c0       	rjmp	.+74     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4b2:	93 2d       	mov	r25, r3
 4b4:	99 7f       	andi	r25, 0xF9	; 249
 4b6:	b9 2e       	mov	r11, r25
 4b8:	8f 36       	cpi	r24, 0x6F	; 111
 4ba:	c1 f0       	breq	.+48     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4bc:	18 f4       	brcc	.+6      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4be:	88 35       	cpi	r24, 0x58	; 88
 4c0:	79 f0       	breq	.+30     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c2:	ae c0       	rjmp	.+348    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 4c4:	80 37       	cpi	r24, 0x70	; 112
 4c6:	19 f0       	breq	.+6      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c8:	88 37       	cpi	r24, 0x78	; 120
 4ca:	21 f0       	breq	.+8      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4cc:	a9 c0       	rjmp	.+338    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 4ce:	e9 2f       	mov	r30, r25
 4d0:	e0 61       	ori	r30, 0x10	; 16
 4d2:	be 2e       	mov	r11, r30
 4d4:	b4 fe       	sbrs	r11, 4
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d8:	fb 2d       	mov	r31, r11
 4da:	f4 60       	ori	r31, 0x04	; 4
 4dc:	bf 2e       	mov	r11, r31
 4de:	09 c0       	rjmp	.+18     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e0:	34 fe       	sbrs	r3, 4
 4e2:	0a c0       	rjmp	.+20     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4e4:	29 2f       	mov	r18, r25
 4e6:	26 60       	ori	r18, 0x06	; 6
 4e8:	b2 2e       	mov	r11, r18
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ec:	28 e0       	ldi	r18, 0x08	; 8
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f2:	20 e1       	ldi	r18, 0x10	; 16
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	20 e1       	ldi	r18, 0x10	; 16
 4fa:	32 e0       	ldi	r19, 0x02	; 2
 4fc:	f8 01       	movw	r30, r16
 4fe:	b7 fe       	sbrs	r11, 7
 500:	07 c0       	rjmp	.+14     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 502:	60 81       	ld	r22, Z
 504:	71 81       	ldd	r23, Z+1	; 0x01
 506:	82 81       	ldd	r24, Z+2	; 0x02
 508:	93 81       	ldd	r25, Z+3	; 0x03
 50a:	0c 5f       	subi	r16, 0xFC	; 252
 50c:	1f 4f       	sbci	r17, 0xFF	; 255
 50e:	06 c0       	rjmp	.+12     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 510:	60 81       	ld	r22, Z
 512:	71 81       	ldd	r23, Z+1	; 0x01
 514:	80 e0       	ldi	r24, 0x00	; 0
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	0e 5f       	subi	r16, 0xFE	; 254
 51a:	1f 4f       	sbci	r17, 0xFF	; 255
 51c:	a3 01       	movw	r20, r6
 51e:	f1 d0       	rcall	.+482    	; 0x702 <__ultoa_invert>
 520:	88 2e       	mov	r8, r24
 522:	86 18       	sub	r8, r6
 524:	fb 2d       	mov	r31, r11
 526:	ff 77       	andi	r31, 0x7F	; 127
 528:	3f 2e       	mov	r3, r31
 52a:	36 fe       	sbrs	r3, 6
 52c:	0d c0       	rjmp	.+26     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 52e:	23 2d       	mov	r18, r3
 530:	2e 7f       	andi	r18, 0xFE	; 254
 532:	a2 2e       	mov	r10, r18
 534:	89 14       	cp	r8, r9
 536:	58 f4       	brcc	.+22     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 538:	34 fe       	sbrs	r3, 4
 53a:	0b c0       	rjmp	.+22     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 53c:	32 fc       	sbrc	r3, 2
 53e:	09 c0       	rjmp	.+18     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 540:	83 2d       	mov	r24, r3
 542:	8e 7e       	andi	r24, 0xEE	; 238
 544:	a8 2e       	mov	r10, r24
 546:	05 c0       	rjmp	.+10     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 548:	b8 2c       	mov	r11, r8
 54a:	a3 2c       	mov	r10, r3
 54c:	03 c0       	rjmp	.+6      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 54e:	b8 2c       	mov	r11, r8
 550:	01 c0       	rjmp	.+2      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 552:	b9 2c       	mov	r11, r9
 554:	a4 fe       	sbrs	r10, 4
 556:	0f c0       	rjmp	.+30     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 558:	fe 01       	movw	r30, r28
 55a:	e8 0d       	add	r30, r8
 55c:	f1 1d       	adc	r31, r1
 55e:	80 81       	ld	r24, Z
 560:	80 33       	cpi	r24, 0x30	; 48
 562:	21 f4       	brne	.+8      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 564:	9a 2d       	mov	r25, r10
 566:	99 7e       	andi	r25, 0xE9	; 233
 568:	a9 2e       	mov	r10, r25
 56a:	09 c0       	rjmp	.+18     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 56c:	a2 fe       	sbrs	r10, 2
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 570:	b3 94       	inc	r11
 572:	b3 94       	inc	r11
 574:	04 c0       	rjmp	.+8      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 576:	8a 2d       	mov	r24, r10
 578:	86 78       	andi	r24, 0x86	; 134
 57a:	09 f0       	breq	.+2      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57c:	b3 94       	inc	r11
 57e:	a3 fc       	sbrc	r10, 3
 580:	10 c0       	rjmp	.+32     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 582:	a0 fe       	sbrs	r10, 0
 584:	06 c0       	rjmp	.+12     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 586:	b2 14       	cp	r11, r2
 588:	80 f4       	brcc	.+32     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 58a:	28 0c       	add	r2, r8
 58c:	92 2c       	mov	r9, r2
 58e:	9b 18       	sub	r9, r11
 590:	0d c0       	rjmp	.+26     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 592:	b2 14       	cp	r11, r2
 594:	58 f4       	brcc	.+22     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 596:	b6 01       	movw	r22, r12
 598:	80 e2       	ldi	r24, 0x20	; 32
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	76 d0       	rcall	.+236    	; 0x68a <fputc>
 59e:	b3 94       	inc	r11
 5a0:	f8 cf       	rjmp	.-16     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 5a2:	b2 14       	cp	r11, r2
 5a4:	18 f4       	brcc	.+6      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a6:	2b 18       	sub	r2, r11
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	98 2c       	mov	r9, r8
 5ac:	21 2c       	mov	r2, r1
 5ae:	a4 fe       	sbrs	r10, 4
 5b0:	0f c0       	rjmp	.+30     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5b2:	b6 01       	movw	r22, r12
 5b4:	80 e3       	ldi	r24, 0x30	; 48
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	68 d0       	rcall	.+208    	; 0x68a <fputc>
 5ba:	a2 fe       	sbrs	r10, 2
 5bc:	16 c0       	rjmp	.+44     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5be:	a1 fc       	sbrc	r10, 1
 5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c2:	88 e7       	ldi	r24, 0x78	; 120
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c8:	88 e5       	ldi	r24, 0x58	; 88
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	b6 01       	movw	r22, r12
 5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d0:	8a 2d       	mov	r24, r10
 5d2:	86 78       	andi	r24, 0x86	; 134
 5d4:	51 f0       	breq	.+20     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d6:	a1 fe       	sbrs	r10, 1
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5da:	8b e2       	ldi	r24, 0x2B	; 43
 5dc:	01 c0       	rjmp	.+2      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5de:	80 e2       	ldi	r24, 0x20	; 32
 5e0:	a7 fc       	sbrc	r10, 7
 5e2:	8d e2       	ldi	r24, 0x2D	; 45
 5e4:	b6 01       	movw	r22, r12
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	50 d0       	rcall	.+160    	; 0x68a <fputc>
 5ea:	89 14       	cp	r8, r9
 5ec:	30 f4       	brcc	.+12     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5ee:	b6 01       	movw	r22, r12
 5f0:	80 e3       	ldi	r24, 0x30	; 48
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	4a d0       	rcall	.+148    	; 0x68a <fputc>
 5f6:	9a 94       	dec	r9
 5f8:	f8 cf       	rjmp	.-16     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5fa:	8a 94       	dec	r8
 5fc:	f3 01       	movw	r30, r6
 5fe:	e8 0d       	add	r30, r8
 600:	f1 1d       	adc	r31, r1
 602:	80 81       	ld	r24, Z
 604:	b6 01       	movw	r22, r12
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	40 d0       	rcall	.+128    	; 0x68a <fputc>
 60a:	81 10       	cpse	r8, r1
 60c:	f6 cf       	rjmp	.-20     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 60e:	22 20       	and	r2, r2
 610:	09 f4       	brne	.+2      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 612:	4e ce       	rjmp	.-868    	; 0x2b0 <vfprintf+0x4c>
 614:	b6 01       	movw	r22, r12
 616:	80 e2       	ldi	r24, 0x20	; 32
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	37 d0       	rcall	.+110    	; 0x68a <fputc>
 61c:	2a 94       	dec	r2
 61e:	f7 cf       	rjmp	.-18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 620:	f6 01       	movw	r30, r12
 622:	86 81       	ldd	r24, Z+6	; 0x06
 624:	97 81       	ldd	r25, Z+7	; 0x07
 626:	02 c0       	rjmp	.+4      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 628:	8f ef       	ldi	r24, 0xFF	; 255
 62a:	9f ef       	ldi	r25, 0xFF	; 255
 62c:	2b 96       	adiw	r28, 0x0b	; 11
 62e:	0f b6       	in	r0, 0x3f	; 63
 630:	f8 94       	cli
 632:	de bf       	out	0x3e, r29	; 62
 634:	0f be       	out	0x3f, r0	; 63
 636:	cd bf       	out	0x3d, r28	; 61
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	1f 91       	pop	r17
 63e:	0f 91       	pop	r16
 640:	ff 90       	pop	r15
 642:	ef 90       	pop	r14
 644:	df 90       	pop	r13
 646:	cf 90       	pop	r12
 648:	bf 90       	pop	r11
 64a:	af 90       	pop	r10
 64c:	9f 90       	pop	r9
 64e:	8f 90       	pop	r8
 650:	7f 90       	pop	r7
 652:	6f 90       	pop	r6
 654:	5f 90       	pop	r5
 656:	4f 90       	pop	r4
 658:	3f 90       	pop	r3
 65a:	2f 90       	pop	r2
 65c:	08 95       	ret

0000065e <strnlen_P>:
 65e:	fc 01       	movw	r30, r24
 660:	05 90       	lpm	r0, Z+
 662:	61 50       	subi	r22, 0x01	; 1
 664:	70 40       	sbci	r23, 0x00	; 0
 666:	01 10       	cpse	r0, r1
 668:	d8 f7       	brcc	.-10     	; 0x660 <strnlen_P+0x2>
 66a:	80 95       	com	r24
 66c:	90 95       	com	r25
 66e:	8e 0f       	add	r24, r30
 670:	9f 1f       	adc	r25, r31
 672:	08 95       	ret

00000674 <strnlen>:
 674:	fc 01       	movw	r30, r24
 676:	61 50       	subi	r22, 0x01	; 1
 678:	70 40       	sbci	r23, 0x00	; 0
 67a:	01 90       	ld	r0, Z+
 67c:	01 10       	cpse	r0, r1
 67e:	d8 f7       	brcc	.-10     	; 0x676 <strnlen+0x2>
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	8e 0f       	add	r24, r30
 686:	9f 1f       	adc	r25, r31
 688:	08 95       	ret

0000068a <fputc>:
 68a:	0f 93       	push	r16
 68c:	1f 93       	push	r17
 68e:	cf 93       	push	r28
 690:	df 93       	push	r29
 692:	fb 01       	movw	r30, r22
 694:	23 81       	ldd	r18, Z+3	; 0x03
 696:	21 fd       	sbrc	r18, 1
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <fputc+0x16>
 69a:	8f ef       	ldi	r24, 0xFF	; 255
 69c:	9f ef       	ldi	r25, 0xFF	; 255
 69e:	2c c0       	rjmp	.+88     	; 0x6f8 <fputc+0x6e>
 6a0:	22 ff       	sbrs	r18, 2
 6a2:	16 c0       	rjmp	.+44     	; 0x6d0 <fputc+0x46>
 6a4:	46 81       	ldd	r20, Z+6	; 0x06
 6a6:	57 81       	ldd	r21, Z+7	; 0x07
 6a8:	24 81       	ldd	r18, Z+4	; 0x04
 6aa:	35 81       	ldd	r19, Z+5	; 0x05
 6ac:	42 17       	cp	r20, r18
 6ae:	53 07       	cpc	r21, r19
 6b0:	44 f4       	brge	.+16     	; 0x6c2 <fputc+0x38>
 6b2:	a0 81       	ld	r26, Z
 6b4:	b1 81       	ldd	r27, Z+1	; 0x01
 6b6:	9d 01       	movw	r18, r26
 6b8:	2f 5f       	subi	r18, 0xFF	; 255
 6ba:	3f 4f       	sbci	r19, 0xFF	; 255
 6bc:	31 83       	std	Z+1, r19	; 0x01
 6be:	20 83       	st	Z, r18
 6c0:	8c 93       	st	X, r24
 6c2:	26 81       	ldd	r18, Z+6	; 0x06
 6c4:	37 81       	ldd	r19, Z+7	; 0x07
 6c6:	2f 5f       	subi	r18, 0xFF	; 255
 6c8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ca:	37 83       	std	Z+7, r19	; 0x07
 6cc:	26 83       	std	Z+6, r18	; 0x06
 6ce:	14 c0       	rjmp	.+40     	; 0x6f8 <fputc+0x6e>
 6d0:	8b 01       	movw	r16, r22
 6d2:	ec 01       	movw	r28, r24
 6d4:	fb 01       	movw	r30, r22
 6d6:	00 84       	ldd	r0, Z+8	; 0x08
 6d8:	f1 85       	ldd	r31, Z+9	; 0x09
 6da:	e0 2d       	mov	r30, r0
 6dc:	19 95       	eicall
 6de:	89 2b       	or	r24, r25
 6e0:	e1 f6       	brne	.-72     	; 0x69a <fputc+0x10>
 6e2:	d8 01       	movw	r26, r16
 6e4:	16 96       	adiw	r26, 0x06	; 6
 6e6:	8d 91       	ld	r24, X+
 6e8:	9c 91       	ld	r25, X
 6ea:	17 97       	sbiw	r26, 0x07	; 7
 6ec:	01 96       	adiw	r24, 0x01	; 1
 6ee:	17 96       	adiw	r26, 0x07	; 7
 6f0:	9c 93       	st	X, r25
 6f2:	8e 93       	st	-X, r24
 6f4:	16 97       	sbiw	r26, 0x06	; 6
 6f6:	ce 01       	movw	r24, r28
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	1f 91       	pop	r17
 6fe:	0f 91       	pop	r16
 700:	08 95       	ret

00000702 <__ultoa_invert>:
 702:	fa 01       	movw	r30, r20
 704:	aa 27       	eor	r26, r26
 706:	28 30       	cpi	r18, 0x08	; 8
 708:	51 f1       	breq	.+84     	; 0x75e <__ultoa_invert+0x5c>
 70a:	20 31       	cpi	r18, 0x10	; 16
 70c:	81 f1       	breq	.+96     	; 0x76e <__ultoa_invert+0x6c>
 70e:	e8 94       	clt
 710:	6f 93       	push	r22
 712:	6e 7f       	andi	r22, 0xFE	; 254
 714:	6e 5f       	subi	r22, 0xFE	; 254
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	8f 4f       	sbci	r24, 0xFF	; 255
 71a:	9f 4f       	sbci	r25, 0xFF	; 255
 71c:	af 4f       	sbci	r26, 0xFF	; 255
 71e:	b1 e0       	ldi	r27, 0x01	; 1
 720:	3e d0       	rcall	.+124    	; 0x79e <__ultoa_invert+0x9c>
 722:	b4 e0       	ldi	r27, 0x04	; 4
 724:	3c d0       	rcall	.+120    	; 0x79e <__ultoa_invert+0x9c>
 726:	67 0f       	add	r22, r23
 728:	78 1f       	adc	r23, r24
 72a:	89 1f       	adc	r24, r25
 72c:	9a 1f       	adc	r25, r26
 72e:	a1 1d       	adc	r26, r1
 730:	68 0f       	add	r22, r24
 732:	79 1f       	adc	r23, r25
 734:	8a 1f       	adc	r24, r26
 736:	91 1d       	adc	r25, r1
 738:	a1 1d       	adc	r26, r1
 73a:	6a 0f       	add	r22, r26
 73c:	71 1d       	adc	r23, r1
 73e:	81 1d       	adc	r24, r1
 740:	91 1d       	adc	r25, r1
 742:	a1 1d       	adc	r26, r1
 744:	20 d0       	rcall	.+64     	; 0x786 <__ultoa_invert+0x84>
 746:	09 f4       	brne	.+2      	; 0x74a <__ultoa_invert+0x48>
 748:	68 94       	set
 74a:	3f 91       	pop	r19
 74c:	2a e0       	ldi	r18, 0x0A	; 10
 74e:	26 9f       	mul	r18, r22
 750:	11 24       	eor	r1, r1
 752:	30 19       	sub	r19, r0
 754:	30 5d       	subi	r19, 0xD0	; 208
 756:	31 93       	st	Z+, r19
 758:	de f6       	brtc	.-74     	; 0x710 <__ultoa_invert+0xe>
 75a:	cf 01       	movw	r24, r30
 75c:	08 95       	ret
 75e:	46 2f       	mov	r20, r22
 760:	47 70       	andi	r20, 0x07	; 7
 762:	40 5d       	subi	r20, 0xD0	; 208
 764:	41 93       	st	Z+, r20
 766:	b3 e0       	ldi	r27, 0x03	; 3
 768:	0f d0       	rcall	.+30     	; 0x788 <__ultoa_invert+0x86>
 76a:	c9 f7       	brne	.-14     	; 0x75e <__ultoa_invert+0x5c>
 76c:	f6 cf       	rjmp	.-20     	; 0x75a <__ultoa_invert+0x58>
 76e:	46 2f       	mov	r20, r22
 770:	4f 70       	andi	r20, 0x0F	; 15
 772:	40 5d       	subi	r20, 0xD0	; 208
 774:	4a 33       	cpi	r20, 0x3A	; 58
 776:	18 f0       	brcs	.+6      	; 0x77e <__ultoa_invert+0x7c>
 778:	49 5d       	subi	r20, 0xD9	; 217
 77a:	31 fd       	sbrc	r19, 1
 77c:	40 52       	subi	r20, 0x20	; 32
 77e:	41 93       	st	Z+, r20
 780:	02 d0       	rcall	.+4      	; 0x786 <__ultoa_invert+0x84>
 782:	a9 f7       	brne	.-22     	; 0x76e <__ultoa_invert+0x6c>
 784:	ea cf       	rjmp	.-44     	; 0x75a <__ultoa_invert+0x58>
 786:	b4 e0       	ldi	r27, 0x04	; 4
 788:	a6 95       	lsr	r26
 78a:	97 95       	ror	r25
 78c:	87 95       	ror	r24
 78e:	77 95       	ror	r23
 790:	67 95       	ror	r22
 792:	ba 95       	dec	r27
 794:	c9 f7       	brne	.-14     	; 0x788 <__ultoa_invert+0x86>
 796:	00 97       	sbiw	r24, 0x00	; 0
 798:	61 05       	cpc	r22, r1
 79a:	71 05       	cpc	r23, r1
 79c:	08 95       	ret
 79e:	9b 01       	movw	r18, r22
 7a0:	ac 01       	movw	r20, r24
 7a2:	0a 2e       	mov	r0, r26
 7a4:	06 94       	lsr	r0
 7a6:	57 95       	ror	r21
 7a8:	47 95       	ror	r20
 7aa:	37 95       	ror	r19
 7ac:	27 95       	ror	r18
 7ae:	ba 95       	dec	r27
 7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__ultoa_invert+0xa2>
 7b2:	62 0f       	add	r22, r18
 7b4:	73 1f       	adc	r23, r19
 7b6:	84 1f       	adc	r24, r20
 7b8:	95 1f       	adc	r25, r21
 7ba:	a0 1d       	adc	r26, r0
 7bc:	08 95       	ret

000007be <_exit>:
 7be:	f8 94       	cli

000007c0 <__stop_program>:
 7c0:	ff cf       	rjmp	.-2      	; 0x7c0 <__stop_program>
