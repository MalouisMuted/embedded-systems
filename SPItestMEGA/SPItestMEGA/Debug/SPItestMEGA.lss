
SPItestMEGA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  00000786  0000081a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000786  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800230  00800230  0000084a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000084a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eff  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d35  00000000  00000000  00001817  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003dd  00000000  00000000  0000254c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  0000292c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000063a  00000000  00000000  00002980  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cc  00000000  00000000  00002fba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00003086  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e8       	ldi	r30, 0x86	; 134
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	12 d0       	rcall	.+36     	; 0x144 <main>
 120:	30 c3       	rjmp	.+1632   	; 0x782 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
 124:	e0 ec       	ldi	r30, 0xC0	; 192
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	90 81       	ld	r25, Z
 12a:	95 ff       	sbrs	r25, 5
 12c:	fd cf       	rjmp	.-6      	; 0x128 <USART_Transmit+0x4>
    {
        ;
    }
    
    /* Puts the data into a buffer, then sends/transmits the data */
    UDR0 = data;
 12e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 132:	08 95       	ret

00000134 <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	85 ff       	sbrs	r24, 5
 13c:	fd cf       	rjmp	.-6      	; 0x138 <USART_Receive+0x4>
    {
        ;
    }
    
    /* Get the received data from the buffer */
    return UDR0;
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
}
 142:	08 95       	ret

00000144 <main>:
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

int 
main(void)
{
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	cd b7       	in	r28, 0x3d	; 61
 14a:	de b7       	in	r29, 0x3e	; 62
 14c:	a8 97       	sbiw	r28, 0x28	; 40
 14e:	0f b6       	in	r0, 0x3f	; 63
 150:	f8 94       	cli
 152:	de bf       	out	0x3e, r29	; 62
 154:	0f be       	out	0x3f, r0	; 63
 156:	cd bf       	out	0x3d, r28	; 61
    /* set SS, MOSI and SCK as output, pins 53 (PB0), 51 (PB2) and 52 (PB1) */
    DDRB |= (1 << PB0) | (1 << PB1) | (1 << PB2); // SS as output
 158:	84 b1       	in	r24, 0x04	; 4
 15a:	87 60       	ori	r24, 0x07	; 7
 15c:	84 b9       	out	0x04, r24	; 4
    /* set SPI enable and master/slave select, making MEGA the master */
    SPCR |= (1 << 6) | (1 << 4);
 15e:	8c b5       	in	r24, 0x2c	; 44
 160:	80 65       	ori	r24, 0x50	; 80
 162:	8c bd       	out	0x2c, r24	; 44
    /* set SPI clock rate to 1 MHz */
    SPCR |= (1 << 0);
 164:	8c b5       	in	r24, 0x2c	; 44
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8c bd       	out	0x2c, r24	; 44

static void
USART_init(uint16_t ubrr)
{
    /* Set baud rate in the USART Baud Rate Registers (UBRR) */
    UBRR0H = (unsigned char) (ubrr >> 8);
 16a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    UBRR0L = (unsigned char) ubrr;
 16e:	87 e6       	ldi	r24, 0x67	; 103
 170:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    
    /* Enable receiver and transmitter on RX0 and TX0 */
    UCSR0B |= (1 << RXEN0) | (1 << TXEN0); 
 174:	e1 ec       	ldi	r30, 0xC1	; 193
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	88 61       	ori	r24, 0x18	; 24
 17c:	80 83       	st	Z, r24
    
    /* Set frame format: 8 bit data, 2 stop bit */
    UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 17e:	e2 ec       	ldi	r30, 0xC2	; 194
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	8e 60       	ori	r24, 0x0E	; 14
 186:	80 83       	st	Z, r24
    
    // initialize the UART with 9600 BAUD
    USART_init(MYUBRR);
        
    // redirect the stdin and stdout to UART functions
    stdout = &uart_output;
 188:	e0 e3       	ldi	r30, 0x30	; 48
 18a:	f2 e0       	ldi	r31, 0x02	; 2
 18c:	8e e0       	ldi	r24, 0x0E	; 14
 18e:	92 e0       	ldi	r25, 0x02	; 2
 190:	93 83       	std	Z+3, r25	; 0x03
 192:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;
 194:	80 e0       	ldi	r24, 0x00	; 0
 196:	92 e0       	ldi	r25, 0x02	; 2
 198:	91 83       	std	Z+1, r25	; 0x01
 19a:	80 83       	st	Z, r24
    
    unsigned char spi_send_data[20] = "master to slave\n";
 19c:	81 e1       	ldi	r24, 0x11	; 17
 19e:	ec e1       	ldi	r30, 0x1C	; 28
 1a0:	f2 e0       	ldi	r31, 0x02	; 2
 1a2:	de 01       	movw	r26, r28
 1a4:	11 96       	adiw	r26, 0x01	; 1
 1a6:	01 90       	ld	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	8a 95       	dec	r24
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x62>
 1ae:	fe 01       	movw	r30, r28
 1b0:	72 96       	adiw	r30, 0x12	; 18
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	df 01       	movw	r26, r30
 1b6:	1d 92       	st	X+, r1
 1b8:	8a 95       	dec	r24
 1ba:	e9 f7       	brne	.-6      	; 0x1b6 <main+0x72>
            spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
        }
            
        PORTB |= (1 << PB0); // SS HIGH
        
        printf(spi_receive_data);
 1bc:	8e 01       	movw	r16, r28
 1be:	0b 5e       	subi	r16, 0xEB	; 235
 1c0:	1f 4f       	sbci	r17, 0xFF	; 255
    
    /* send message to slave and receive message from slave */
    while (1) 
    {
        /* send byte to slave and receive a byte from slave */
        PORTB &= ~(1 << PB0); // SS LOW
 1c2:	28 98       	cbi	0x05, 0	; 5
 1c4:	fe 01       	movw	r30, r28
 1c6:	31 96       	adiw	r30, 0x01	; 1
 1c8:	de 01       	movw	r26, r28
 1ca:	55 96       	adiw	r26, 0x15	; 21
 1cc:	9d 01       	movw	r18, r26
            
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
        {
                
            SPDR = spi_send_data[spi_data_index]; // send byte using SPI data register
 1ce:	81 91       	ld	r24, Z+
 1d0:	8e bd       	out	0x2e, r24	; 46
 
            while(!(SPSR & (1 << SPIF)))
 1d2:	0d b4       	in	r0, 0x2d	; 45
 1d4:	07 fe       	sbrs	r0, 7
 1d6:	fd cf       	rjmp	.-6      	; 0x1d2 <main+0x8e>
            {
                /* wait until the transmission is complete */
                ;
            }
            
            spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
 1d8:	8e b5       	in	r24, 0x2e	; 46
 1da:	8d 93       	st	X+, r24
    while (1) 
    {
        /* send byte to slave and receive a byte from slave */
        PORTB &= ~(1 << PB0); // SS LOW
            
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 1dc:	e2 17       	cp	r30, r18
 1de:	f3 07       	cpc	r31, r19
 1e0:	b1 f7       	brne	.-20     	; 0x1ce <main+0x8a>
            }
            
            spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
        }
            
        PORTB |= (1 << PB0); // SS HIGH
 1e2:	28 9a       	sbi	0x05, 0	; 5
        
        printf(spi_receive_data);
 1e4:	1f 93       	push	r17
 1e6:	0f 93       	push	r16
 1e8:	0c d0       	rcall	.+24     	; 0x202 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ea:	bf ef       	ldi	r27, 0xFF	; 255
 1ec:	27 ea       	ldi	r18, 0xA7	; 167
 1ee:	81 e6       	ldi	r24, 0x61	; 97
 1f0:	b1 50       	subi	r27, 0x01	; 1
 1f2:	20 40       	sbci	r18, 0x00	; 0
 1f4:	80 40       	sbci	r24, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0xac>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0xb6>
 1fa:	00 00       	nop
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	e0 cf       	rjmp	.-64     	; 0x1c2 <main+0x7e>

00000202 <printf>:
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	cd b7       	in	r28, 0x3d	; 61
 208:	de b7       	in	r29, 0x3e	; 62
 20a:	ae 01       	movw	r20, r28
 20c:	4a 5f       	subi	r20, 0xFA	; 250
 20e:	5f 4f       	sbci	r21, 0xFF	; 255
 210:	fa 01       	movw	r30, r20
 212:	61 91       	ld	r22, Z+
 214:	71 91       	ld	r23, Z+
 216:	af 01       	movw	r20, r30
 218:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end+0x2>
 21c:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x3>
 220:	03 d0       	rcall	.+6      	; 0x228 <vfprintf>
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <vfprintf>:
 228:	2f 92       	push	r2
 22a:	3f 92       	push	r3
 22c:	4f 92       	push	r4
 22e:	5f 92       	push	r5
 230:	6f 92       	push	r6
 232:	7f 92       	push	r7
 234:	8f 92       	push	r8
 236:	9f 92       	push	r9
 238:	af 92       	push	r10
 23a:	bf 92       	push	r11
 23c:	cf 92       	push	r12
 23e:	df 92       	push	r13
 240:	ef 92       	push	r14
 242:	ff 92       	push	r15
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	2b 97       	sbiw	r28, 0x0b	; 11
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	f8 94       	cli
 256:	de bf       	out	0x3e, r29	; 62
 258:	0f be       	out	0x3f, r0	; 63
 25a:	cd bf       	out	0x3d, r28	; 61
 25c:	6c 01       	movw	r12, r24
 25e:	7b 01       	movw	r14, r22
 260:	8a 01       	movw	r16, r20
 262:	fc 01       	movw	r30, r24
 264:	17 82       	std	Z+7, r1	; 0x07
 266:	16 82       	std	Z+6, r1	; 0x06
 268:	83 81       	ldd	r24, Z+3	; 0x03
 26a:	81 ff       	sbrs	r24, 1
 26c:	bf c1       	rjmp	.+894    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 26e:	ce 01       	movw	r24, r28
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	3c 01       	movw	r6, r24
 274:	f6 01       	movw	r30, r12
 276:	93 81       	ldd	r25, Z+3	; 0x03
 278:	f7 01       	movw	r30, r14
 27a:	93 fd       	sbrc	r25, 3
 27c:	85 91       	lpm	r24, Z+
 27e:	93 ff       	sbrs	r25, 3
 280:	81 91       	ld	r24, Z+
 282:	7f 01       	movw	r14, r30
 284:	88 23       	and	r24, r24
 286:	09 f4       	brne	.+2      	; 0x28a <vfprintf+0x62>
 288:	ad c1       	rjmp	.+858    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 28a:	85 32       	cpi	r24, 0x25	; 37
 28c:	39 f4       	brne	.+14     	; 0x29c <vfprintf+0x74>
 28e:	93 fd       	sbrc	r25, 3
 290:	85 91       	lpm	r24, Z+
 292:	93 ff       	sbrs	r25, 3
 294:	81 91       	ld	r24, Z+
 296:	7f 01       	movw	r14, r30
 298:	85 32       	cpi	r24, 0x25	; 37
 29a:	21 f4       	brne	.+8      	; 0x2a4 <vfprintf+0x7c>
 29c:	b6 01       	movw	r22, r12
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	d6 d1       	rcall	.+940    	; 0x64e <fputc>
 2a2:	e8 cf       	rjmp	.-48     	; 0x274 <vfprintf+0x4c>
 2a4:	91 2c       	mov	r9, r1
 2a6:	21 2c       	mov	r2, r1
 2a8:	31 2c       	mov	r3, r1
 2aa:	ff e1       	ldi	r31, 0x1F	; 31
 2ac:	f3 15       	cp	r31, r3
 2ae:	d8 f0       	brcs	.+54     	; 0x2e6 <vfprintf+0xbe>
 2b0:	8b 32       	cpi	r24, 0x2B	; 43
 2b2:	79 f0       	breq	.+30     	; 0x2d2 <vfprintf+0xaa>
 2b4:	38 f4       	brcc	.+14     	; 0x2c4 <vfprintf+0x9c>
 2b6:	80 32       	cpi	r24, 0x20	; 32
 2b8:	79 f0       	breq	.+30     	; 0x2d8 <vfprintf+0xb0>
 2ba:	83 32       	cpi	r24, 0x23	; 35
 2bc:	a1 f4       	brne	.+40     	; 0x2e6 <vfprintf+0xbe>
 2be:	23 2d       	mov	r18, r3
 2c0:	20 61       	ori	r18, 0x10	; 16
 2c2:	1d c0       	rjmp	.+58     	; 0x2fe <vfprintf+0xd6>
 2c4:	8d 32       	cpi	r24, 0x2D	; 45
 2c6:	61 f0       	breq	.+24     	; 0x2e0 <vfprintf+0xb8>
 2c8:	80 33       	cpi	r24, 0x30	; 48
 2ca:	69 f4       	brne	.+26     	; 0x2e6 <vfprintf+0xbe>
 2cc:	23 2d       	mov	r18, r3
 2ce:	21 60       	ori	r18, 0x01	; 1
 2d0:	16 c0       	rjmp	.+44     	; 0x2fe <vfprintf+0xd6>
 2d2:	83 2d       	mov	r24, r3
 2d4:	82 60       	ori	r24, 0x02	; 2
 2d6:	38 2e       	mov	r3, r24
 2d8:	e3 2d       	mov	r30, r3
 2da:	e4 60       	ori	r30, 0x04	; 4
 2dc:	3e 2e       	mov	r3, r30
 2de:	2a c0       	rjmp	.+84     	; 0x334 <vfprintf+0x10c>
 2e0:	f3 2d       	mov	r31, r3
 2e2:	f8 60       	ori	r31, 0x08	; 8
 2e4:	1d c0       	rjmp	.+58     	; 0x320 <vfprintf+0xf8>
 2e6:	37 fc       	sbrc	r3, 7
 2e8:	2d c0       	rjmp	.+90     	; 0x344 <vfprintf+0x11c>
 2ea:	20 ed       	ldi	r18, 0xD0	; 208
 2ec:	28 0f       	add	r18, r24
 2ee:	2a 30       	cpi	r18, 0x0A	; 10
 2f0:	40 f0       	brcs	.+16     	; 0x302 <vfprintf+0xda>
 2f2:	8e 32       	cpi	r24, 0x2E	; 46
 2f4:	b9 f4       	brne	.+46     	; 0x324 <vfprintf+0xfc>
 2f6:	36 fc       	sbrc	r3, 6
 2f8:	75 c1       	rjmp	.+746    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 2fa:	23 2d       	mov	r18, r3
 2fc:	20 64       	ori	r18, 0x40	; 64
 2fe:	32 2e       	mov	r3, r18
 300:	19 c0       	rjmp	.+50     	; 0x334 <vfprintf+0x10c>
 302:	36 fe       	sbrs	r3, 6
 304:	06 c0       	rjmp	.+12     	; 0x312 <vfprintf+0xea>
 306:	8a e0       	ldi	r24, 0x0A	; 10
 308:	98 9e       	mul	r9, r24
 30a:	20 0d       	add	r18, r0
 30c:	11 24       	eor	r1, r1
 30e:	92 2e       	mov	r9, r18
 310:	11 c0       	rjmp	.+34     	; 0x334 <vfprintf+0x10c>
 312:	ea e0       	ldi	r30, 0x0A	; 10
 314:	2e 9e       	mul	r2, r30
 316:	20 0d       	add	r18, r0
 318:	11 24       	eor	r1, r1
 31a:	22 2e       	mov	r2, r18
 31c:	f3 2d       	mov	r31, r3
 31e:	f0 62       	ori	r31, 0x20	; 32
 320:	3f 2e       	mov	r3, r31
 322:	08 c0       	rjmp	.+16     	; 0x334 <vfprintf+0x10c>
 324:	8c 36       	cpi	r24, 0x6C	; 108
 326:	21 f4       	brne	.+8      	; 0x330 <vfprintf+0x108>
 328:	83 2d       	mov	r24, r3
 32a:	80 68       	ori	r24, 0x80	; 128
 32c:	38 2e       	mov	r3, r24
 32e:	02 c0       	rjmp	.+4      	; 0x334 <vfprintf+0x10c>
 330:	88 36       	cpi	r24, 0x68	; 104
 332:	41 f4       	brne	.+16     	; 0x344 <vfprintf+0x11c>
 334:	f7 01       	movw	r30, r14
 336:	93 fd       	sbrc	r25, 3
 338:	85 91       	lpm	r24, Z+
 33a:	93 ff       	sbrs	r25, 3
 33c:	81 91       	ld	r24, Z+
 33e:	7f 01       	movw	r14, r30
 340:	81 11       	cpse	r24, r1
 342:	b3 cf       	rjmp	.-154    	; 0x2aa <vfprintf+0x82>
 344:	98 2f       	mov	r25, r24
 346:	9f 7d       	andi	r25, 0xDF	; 223
 348:	95 54       	subi	r25, 0x45	; 69
 34a:	93 30       	cpi	r25, 0x03	; 3
 34c:	28 f4       	brcc	.+10     	; 0x358 <vfprintf+0x130>
 34e:	0c 5f       	subi	r16, 0xFC	; 252
 350:	1f 4f       	sbci	r17, 0xFF	; 255
 352:	9f e3       	ldi	r25, 0x3F	; 63
 354:	99 83       	std	Y+1, r25	; 0x01
 356:	0d c0       	rjmp	.+26     	; 0x372 <vfprintf+0x14a>
 358:	83 36       	cpi	r24, 0x63	; 99
 35a:	31 f0       	breq	.+12     	; 0x368 <vfprintf+0x140>
 35c:	83 37       	cpi	r24, 0x73	; 115
 35e:	71 f0       	breq	.+28     	; 0x37c <vfprintf+0x154>
 360:	83 35       	cpi	r24, 0x53	; 83
 362:	09 f0       	breq	.+2      	; 0x366 <vfprintf+0x13e>
 364:	55 c0       	rjmp	.+170    	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 366:	20 c0       	rjmp	.+64     	; 0x3a8 <vfprintf+0x180>
 368:	f8 01       	movw	r30, r16
 36a:	80 81       	ld	r24, Z
 36c:	89 83       	std	Y+1, r24	; 0x01
 36e:	0e 5f       	subi	r16, 0xFE	; 254
 370:	1f 4f       	sbci	r17, 0xFF	; 255
 372:	88 24       	eor	r8, r8
 374:	83 94       	inc	r8
 376:	91 2c       	mov	r9, r1
 378:	53 01       	movw	r10, r6
 37a:	12 c0       	rjmp	.+36     	; 0x3a0 <vfprintf+0x178>
 37c:	28 01       	movw	r4, r16
 37e:	f2 e0       	ldi	r31, 0x02	; 2
 380:	4f 0e       	add	r4, r31
 382:	51 1c       	adc	r5, r1
 384:	f8 01       	movw	r30, r16
 386:	a0 80       	ld	r10, Z
 388:	b1 80       	ldd	r11, Z+1	; 0x01
 38a:	36 fe       	sbrs	r3, 6
 38c:	03 c0       	rjmp	.+6      	; 0x394 <vfprintf+0x16c>
 38e:	69 2d       	mov	r22, r9
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	02 c0       	rjmp	.+4      	; 0x398 <vfprintf+0x170>
 394:	6f ef       	ldi	r22, 0xFF	; 255
 396:	7f ef       	ldi	r23, 0xFF	; 255
 398:	c5 01       	movw	r24, r10
 39a:	4e d1       	rcall	.+668    	; 0x638 <strnlen>
 39c:	4c 01       	movw	r8, r24
 39e:	82 01       	movw	r16, r4
 3a0:	f3 2d       	mov	r31, r3
 3a2:	ff 77       	andi	r31, 0x7F	; 127
 3a4:	3f 2e       	mov	r3, r31
 3a6:	15 c0       	rjmp	.+42     	; 0x3d2 <vfprintf+0x1aa>
 3a8:	28 01       	movw	r4, r16
 3aa:	22 e0       	ldi	r18, 0x02	; 2
 3ac:	42 0e       	add	r4, r18
 3ae:	51 1c       	adc	r5, r1
 3b0:	f8 01       	movw	r30, r16
 3b2:	a0 80       	ld	r10, Z
 3b4:	b1 80       	ldd	r11, Z+1	; 0x01
 3b6:	36 fe       	sbrs	r3, 6
 3b8:	03 c0       	rjmp	.+6      	; 0x3c0 <vfprintf+0x198>
 3ba:	69 2d       	mov	r22, r9
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <vfprintf+0x19c>
 3c0:	6f ef       	ldi	r22, 0xFF	; 255
 3c2:	7f ef       	ldi	r23, 0xFF	; 255
 3c4:	c5 01       	movw	r24, r10
 3c6:	2d d1       	rcall	.+602    	; 0x622 <strnlen_P>
 3c8:	4c 01       	movw	r8, r24
 3ca:	f3 2d       	mov	r31, r3
 3cc:	f0 68       	ori	r31, 0x80	; 128
 3ce:	3f 2e       	mov	r3, r31
 3d0:	82 01       	movw	r16, r4
 3d2:	33 fc       	sbrc	r3, 3
 3d4:	19 c0       	rjmp	.+50     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3d6:	82 2d       	mov	r24, r2
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	88 16       	cp	r8, r24
 3dc:	99 06       	cpc	r9, r25
 3de:	a0 f4       	brcc	.+40     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3e0:	b6 01       	movw	r22, r12
 3e2:	80 e2       	ldi	r24, 0x20	; 32
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	33 d1       	rcall	.+614    	; 0x64e <fputc>
 3e8:	2a 94       	dec	r2
 3ea:	f5 cf       	rjmp	.-22     	; 0x3d6 <vfprintf+0x1ae>
 3ec:	f5 01       	movw	r30, r10
 3ee:	37 fc       	sbrc	r3, 7
 3f0:	85 91       	lpm	r24, Z+
 3f2:	37 fe       	sbrs	r3, 7
 3f4:	81 91       	ld	r24, Z+
 3f6:	5f 01       	movw	r10, r30
 3f8:	b6 01       	movw	r22, r12
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	28 d1       	rcall	.+592    	; 0x64e <fputc>
 3fe:	21 10       	cpse	r2, r1
 400:	2a 94       	dec	r2
 402:	21 e0       	ldi	r18, 0x01	; 1
 404:	82 1a       	sub	r8, r18
 406:	91 08       	sbc	r9, r1
 408:	81 14       	cp	r8, r1
 40a:	91 04       	cpc	r9, r1
 40c:	79 f7       	brne	.-34     	; 0x3ec <vfprintf+0x1c4>
 40e:	e1 c0       	rjmp	.+450    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 410:	84 36       	cpi	r24, 0x64	; 100
 412:	11 f0       	breq	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 414:	89 36       	cpi	r24, 0x69	; 105
 416:	39 f5       	brne	.+78     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 418:	f8 01       	movw	r30, r16
 41a:	37 fe       	sbrs	r3, 7
 41c:	07 c0       	rjmp	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41e:	60 81       	ld	r22, Z
 420:	71 81       	ldd	r23, Z+1	; 0x01
 422:	82 81       	ldd	r24, Z+2	; 0x02
 424:	93 81       	ldd	r25, Z+3	; 0x03
 426:	0c 5f       	subi	r16, 0xFC	; 252
 428:	1f 4f       	sbci	r17, 0xFF	; 255
 42a:	08 c0       	rjmp	.+16     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 42c:	60 81       	ld	r22, Z
 42e:	71 81       	ldd	r23, Z+1	; 0x01
 430:	07 2e       	mov	r0, r23
 432:	00 0c       	add	r0, r0
 434:	88 0b       	sbc	r24, r24
 436:	99 0b       	sbc	r25, r25
 438:	0e 5f       	subi	r16, 0xFE	; 254
 43a:	1f 4f       	sbci	r17, 0xFF	; 255
 43c:	f3 2d       	mov	r31, r3
 43e:	ff 76       	andi	r31, 0x6F	; 111
 440:	3f 2e       	mov	r3, r31
 442:	97 ff       	sbrs	r25, 7
 444:	09 c0       	rjmp	.+18     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 446:	90 95       	com	r25
 448:	80 95       	com	r24
 44a:	70 95       	com	r23
 44c:	61 95       	neg	r22
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	f0 68       	ori	r31, 0x80	; 128
 456:	3f 2e       	mov	r3, r31
 458:	2a e0       	ldi	r18, 0x0A	; 10
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	a3 01       	movw	r20, r6
 45e:	33 d1       	rcall	.+614    	; 0x6c6 <__ultoa_invert>
 460:	88 2e       	mov	r8, r24
 462:	86 18       	sub	r8, r6
 464:	44 c0       	rjmp	.+136    	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 466:	85 37       	cpi	r24, 0x75	; 117
 468:	31 f4       	brne	.+12     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46a:	23 2d       	mov	r18, r3
 46c:	2f 7e       	andi	r18, 0xEF	; 239
 46e:	b2 2e       	mov	r11, r18
 470:	2a e0       	ldi	r18, 0x0A	; 10
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	25 c0       	rjmp	.+74     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 476:	93 2d       	mov	r25, r3
 478:	99 7f       	andi	r25, 0xF9	; 249
 47a:	b9 2e       	mov	r11, r25
 47c:	8f 36       	cpi	r24, 0x6F	; 111
 47e:	c1 f0       	breq	.+48     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 480:	18 f4       	brcc	.+6      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 482:	88 35       	cpi	r24, 0x58	; 88
 484:	79 f0       	breq	.+30     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 486:	ae c0       	rjmp	.+348    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 488:	80 37       	cpi	r24, 0x70	; 112
 48a:	19 f0       	breq	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	88 37       	cpi	r24, 0x78	; 120
 48e:	21 f0       	breq	.+8      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 490:	a9 c0       	rjmp	.+338    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 492:	e9 2f       	mov	r30, r25
 494:	e0 61       	ori	r30, 0x10	; 16
 496:	be 2e       	mov	r11, r30
 498:	b4 fe       	sbrs	r11, 4
 49a:	0d c0       	rjmp	.+26     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 49c:	fb 2d       	mov	r31, r11
 49e:	f4 60       	ori	r31, 0x04	; 4
 4a0:	bf 2e       	mov	r11, r31
 4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a4:	34 fe       	sbrs	r3, 4
 4a6:	0a c0       	rjmp	.+20     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4a8:	29 2f       	mov	r18, r25
 4aa:	26 60       	ori	r18, 0x06	; 6
 4ac:	b2 2e       	mov	r11, r18
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b0:	28 e0       	ldi	r18, 0x08	; 8
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	05 c0       	rjmp	.+10     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b6:	20 e1       	ldi	r18, 0x10	; 16
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4bc:	20 e1       	ldi	r18, 0x10	; 16
 4be:	32 e0       	ldi	r19, 0x02	; 2
 4c0:	f8 01       	movw	r30, r16
 4c2:	b7 fe       	sbrs	r11, 7
 4c4:	07 c0       	rjmp	.+14     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c6:	60 81       	ld	r22, Z
 4c8:	71 81       	ldd	r23, Z+1	; 0x01
 4ca:	82 81       	ldd	r24, Z+2	; 0x02
 4cc:	93 81       	ldd	r25, Z+3	; 0x03
 4ce:	0c 5f       	subi	r16, 0xFC	; 252
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	06 c0       	rjmp	.+12     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d4:	60 81       	ld	r22, Z
 4d6:	71 81       	ldd	r23, Z+1	; 0x01
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	0e 5f       	subi	r16, 0xFE	; 254
 4de:	1f 4f       	sbci	r17, 0xFF	; 255
 4e0:	a3 01       	movw	r20, r6
 4e2:	f1 d0       	rcall	.+482    	; 0x6c6 <__ultoa_invert>
 4e4:	88 2e       	mov	r8, r24
 4e6:	86 18       	sub	r8, r6
 4e8:	fb 2d       	mov	r31, r11
 4ea:	ff 77       	andi	r31, 0x7F	; 127
 4ec:	3f 2e       	mov	r3, r31
 4ee:	36 fe       	sbrs	r3, 6
 4f0:	0d c0       	rjmp	.+26     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4f2:	23 2d       	mov	r18, r3
 4f4:	2e 7f       	andi	r18, 0xFE	; 254
 4f6:	a2 2e       	mov	r10, r18
 4f8:	89 14       	cp	r8, r9
 4fa:	58 f4       	brcc	.+22     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4fc:	34 fe       	sbrs	r3, 4
 4fe:	0b c0       	rjmp	.+22     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 500:	32 fc       	sbrc	r3, 2
 502:	09 c0       	rjmp	.+18     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 504:	83 2d       	mov	r24, r3
 506:	8e 7e       	andi	r24, 0xEE	; 238
 508:	a8 2e       	mov	r10, r24
 50a:	05 c0       	rjmp	.+10     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50c:	b8 2c       	mov	r11, r8
 50e:	a3 2c       	mov	r10, r3
 510:	03 c0       	rjmp	.+6      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 512:	b8 2c       	mov	r11, r8
 514:	01 c0       	rjmp	.+2      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 516:	b9 2c       	mov	r11, r9
 518:	a4 fe       	sbrs	r10, 4
 51a:	0f c0       	rjmp	.+30     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 51c:	fe 01       	movw	r30, r28
 51e:	e8 0d       	add	r30, r8
 520:	f1 1d       	adc	r31, r1
 522:	80 81       	ld	r24, Z
 524:	80 33       	cpi	r24, 0x30	; 48
 526:	21 f4       	brne	.+8      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 528:	9a 2d       	mov	r25, r10
 52a:	99 7e       	andi	r25, 0xE9	; 233
 52c:	a9 2e       	mov	r10, r25
 52e:	09 c0       	rjmp	.+18     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 530:	a2 fe       	sbrs	r10, 2
 532:	06 c0       	rjmp	.+12     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 534:	b3 94       	inc	r11
 536:	b3 94       	inc	r11
 538:	04 c0       	rjmp	.+8      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53a:	8a 2d       	mov	r24, r10
 53c:	86 78       	andi	r24, 0x86	; 134
 53e:	09 f0       	breq	.+2      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 540:	b3 94       	inc	r11
 542:	a3 fc       	sbrc	r10, 3
 544:	10 c0       	rjmp	.+32     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 546:	a0 fe       	sbrs	r10, 0
 548:	06 c0       	rjmp	.+12     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 54a:	b2 14       	cp	r11, r2
 54c:	80 f4       	brcc	.+32     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 54e:	28 0c       	add	r2, r8
 550:	92 2c       	mov	r9, r2
 552:	9b 18       	sub	r9, r11
 554:	0d c0       	rjmp	.+26     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 556:	b2 14       	cp	r11, r2
 558:	58 f4       	brcc	.+22     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 55a:	b6 01       	movw	r22, r12
 55c:	80 e2       	ldi	r24, 0x20	; 32
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	76 d0       	rcall	.+236    	; 0x64e <fputc>
 562:	b3 94       	inc	r11
 564:	f8 cf       	rjmp	.-16     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 566:	b2 14       	cp	r11, r2
 568:	18 f4       	brcc	.+6      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56a:	2b 18       	sub	r2, r11
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56e:	98 2c       	mov	r9, r8
 570:	21 2c       	mov	r2, r1
 572:	a4 fe       	sbrs	r10, 4
 574:	0f c0       	rjmp	.+30     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 576:	b6 01       	movw	r22, r12
 578:	80 e3       	ldi	r24, 0x30	; 48
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	68 d0       	rcall	.+208    	; 0x64e <fputc>
 57e:	a2 fe       	sbrs	r10, 2
 580:	16 c0       	rjmp	.+44     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 582:	a1 fc       	sbrc	r10, 1
 584:	03 c0       	rjmp	.+6      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 586:	88 e7       	ldi	r24, 0x78	; 120
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58c:	88 e5       	ldi	r24, 0x58	; 88
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	b6 01       	movw	r22, r12
 592:	0c c0       	rjmp	.+24     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 594:	8a 2d       	mov	r24, r10
 596:	86 78       	andi	r24, 0x86	; 134
 598:	51 f0       	breq	.+20     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 59a:	a1 fe       	sbrs	r10, 1
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59e:	8b e2       	ldi	r24, 0x2B	; 43
 5a0:	01 c0       	rjmp	.+2      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a2:	80 e2       	ldi	r24, 0x20	; 32
 5a4:	a7 fc       	sbrc	r10, 7
 5a6:	8d e2       	ldi	r24, 0x2D	; 45
 5a8:	b6 01       	movw	r22, r12
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	50 d0       	rcall	.+160    	; 0x64e <fputc>
 5ae:	89 14       	cp	r8, r9
 5b0:	30 f4       	brcc	.+12     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5b2:	b6 01       	movw	r22, r12
 5b4:	80 e3       	ldi	r24, 0x30	; 48
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	4a d0       	rcall	.+148    	; 0x64e <fputc>
 5ba:	9a 94       	dec	r9
 5bc:	f8 cf       	rjmp	.-16     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5be:	8a 94       	dec	r8
 5c0:	f3 01       	movw	r30, r6
 5c2:	e8 0d       	add	r30, r8
 5c4:	f1 1d       	adc	r31, r1
 5c6:	80 81       	ld	r24, Z
 5c8:	b6 01       	movw	r22, r12
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	40 d0       	rcall	.+128    	; 0x64e <fputc>
 5ce:	81 10       	cpse	r8, r1
 5d0:	f6 cf       	rjmp	.-20     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5d2:	22 20       	and	r2, r2
 5d4:	09 f4       	brne	.+2      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d6:	4e ce       	rjmp	.-868    	; 0x274 <vfprintf+0x4c>
 5d8:	b6 01       	movw	r22, r12
 5da:	80 e2       	ldi	r24, 0x20	; 32
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	37 d0       	rcall	.+110    	; 0x64e <fputc>
 5e0:	2a 94       	dec	r2
 5e2:	f7 cf       	rjmp	.-18     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5e4:	f6 01       	movw	r30, r12
 5e6:	86 81       	ldd	r24, Z+6	; 0x06
 5e8:	97 81       	ldd	r25, Z+7	; 0x07
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ec:	8f ef       	ldi	r24, 0xFF	; 255
 5ee:	9f ef       	ldi	r25, 0xFF	; 255
 5f0:	2b 96       	adiw	r28, 0x0b	; 11
 5f2:	0f b6       	in	r0, 0x3f	; 63
 5f4:	f8 94       	cli
 5f6:	de bf       	out	0x3e, r29	; 62
 5f8:	0f be       	out	0x3f, r0	; 63
 5fa:	cd bf       	out	0x3d, r28	; 61
 5fc:	df 91       	pop	r29
 5fe:	cf 91       	pop	r28
 600:	1f 91       	pop	r17
 602:	0f 91       	pop	r16
 604:	ff 90       	pop	r15
 606:	ef 90       	pop	r14
 608:	df 90       	pop	r13
 60a:	cf 90       	pop	r12
 60c:	bf 90       	pop	r11
 60e:	af 90       	pop	r10
 610:	9f 90       	pop	r9
 612:	8f 90       	pop	r8
 614:	7f 90       	pop	r7
 616:	6f 90       	pop	r6
 618:	5f 90       	pop	r5
 61a:	4f 90       	pop	r4
 61c:	3f 90       	pop	r3
 61e:	2f 90       	pop	r2
 620:	08 95       	ret

00000622 <strnlen_P>:
 622:	fc 01       	movw	r30, r24
 624:	05 90       	lpm	r0, Z+
 626:	61 50       	subi	r22, 0x01	; 1
 628:	70 40       	sbci	r23, 0x00	; 0
 62a:	01 10       	cpse	r0, r1
 62c:	d8 f7       	brcc	.-10     	; 0x624 <strnlen_P+0x2>
 62e:	80 95       	com	r24
 630:	90 95       	com	r25
 632:	8e 0f       	add	r24, r30
 634:	9f 1f       	adc	r25, r31
 636:	08 95       	ret

00000638 <strnlen>:
 638:	fc 01       	movw	r30, r24
 63a:	61 50       	subi	r22, 0x01	; 1
 63c:	70 40       	sbci	r23, 0x00	; 0
 63e:	01 90       	ld	r0, Z+
 640:	01 10       	cpse	r0, r1
 642:	d8 f7       	brcc	.-10     	; 0x63a <strnlen+0x2>
 644:	80 95       	com	r24
 646:	90 95       	com	r25
 648:	8e 0f       	add	r24, r30
 64a:	9f 1f       	adc	r25, r31
 64c:	08 95       	ret

0000064e <fputc>:
 64e:	0f 93       	push	r16
 650:	1f 93       	push	r17
 652:	cf 93       	push	r28
 654:	df 93       	push	r29
 656:	fb 01       	movw	r30, r22
 658:	23 81       	ldd	r18, Z+3	; 0x03
 65a:	21 fd       	sbrc	r18, 1
 65c:	03 c0       	rjmp	.+6      	; 0x664 <fputc+0x16>
 65e:	8f ef       	ldi	r24, 0xFF	; 255
 660:	9f ef       	ldi	r25, 0xFF	; 255
 662:	2c c0       	rjmp	.+88     	; 0x6bc <fputc+0x6e>
 664:	22 ff       	sbrs	r18, 2
 666:	16 c0       	rjmp	.+44     	; 0x694 <fputc+0x46>
 668:	46 81       	ldd	r20, Z+6	; 0x06
 66a:	57 81       	ldd	r21, Z+7	; 0x07
 66c:	24 81       	ldd	r18, Z+4	; 0x04
 66e:	35 81       	ldd	r19, Z+5	; 0x05
 670:	42 17       	cp	r20, r18
 672:	53 07       	cpc	r21, r19
 674:	44 f4       	brge	.+16     	; 0x686 <fputc+0x38>
 676:	a0 81       	ld	r26, Z
 678:	b1 81       	ldd	r27, Z+1	; 0x01
 67a:	9d 01       	movw	r18, r26
 67c:	2f 5f       	subi	r18, 0xFF	; 255
 67e:	3f 4f       	sbci	r19, 0xFF	; 255
 680:	31 83       	std	Z+1, r19	; 0x01
 682:	20 83       	st	Z, r18
 684:	8c 93       	st	X, r24
 686:	26 81       	ldd	r18, Z+6	; 0x06
 688:	37 81       	ldd	r19, Z+7	; 0x07
 68a:	2f 5f       	subi	r18, 0xFF	; 255
 68c:	3f 4f       	sbci	r19, 0xFF	; 255
 68e:	37 83       	std	Z+7, r19	; 0x07
 690:	26 83       	std	Z+6, r18	; 0x06
 692:	14 c0       	rjmp	.+40     	; 0x6bc <fputc+0x6e>
 694:	8b 01       	movw	r16, r22
 696:	ec 01       	movw	r28, r24
 698:	fb 01       	movw	r30, r22
 69a:	00 84       	ldd	r0, Z+8	; 0x08
 69c:	f1 85       	ldd	r31, Z+9	; 0x09
 69e:	e0 2d       	mov	r30, r0
 6a0:	19 95       	eicall
 6a2:	89 2b       	or	r24, r25
 6a4:	e1 f6       	brne	.-72     	; 0x65e <fputc+0x10>
 6a6:	d8 01       	movw	r26, r16
 6a8:	16 96       	adiw	r26, 0x06	; 6
 6aa:	8d 91       	ld	r24, X+
 6ac:	9c 91       	ld	r25, X
 6ae:	17 97       	sbiw	r26, 0x07	; 7
 6b0:	01 96       	adiw	r24, 0x01	; 1
 6b2:	17 96       	adiw	r26, 0x07	; 7
 6b4:	9c 93       	st	X, r25
 6b6:	8e 93       	st	-X, r24
 6b8:	16 97       	sbiw	r26, 0x06	; 6
 6ba:	ce 01       	movw	r24, r28
 6bc:	df 91       	pop	r29
 6be:	cf 91       	pop	r28
 6c0:	1f 91       	pop	r17
 6c2:	0f 91       	pop	r16
 6c4:	08 95       	ret

000006c6 <__ultoa_invert>:
 6c6:	fa 01       	movw	r30, r20
 6c8:	aa 27       	eor	r26, r26
 6ca:	28 30       	cpi	r18, 0x08	; 8
 6cc:	51 f1       	breq	.+84     	; 0x722 <__ultoa_invert+0x5c>
 6ce:	20 31       	cpi	r18, 0x10	; 16
 6d0:	81 f1       	breq	.+96     	; 0x732 <__ultoa_invert+0x6c>
 6d2:	e8 94       	clt
 6d4:	6f 93       	push	r22
 6d6:	6e 7f       	andi	r22, 0xFE	; 254
 6d8:	6e 5f       	subi	r22, 0xFE	; 254
 6da:	7f 4f       	sbci	r23, 0xFF	; 255
 6dc:	8f 4f       	sbci	r24, 0xFF	; 255
 6de:	9f 4f       	sbci	r25, 0xFF	; 255
 6e0:	af 4f       	sbci	r26, 0xFF	; 255
 6e2:	b1 e0       	ldi	r27, 0x01	; 1
 6e4:	3e d0       	rcall	.+124    	; 0x762 <__ultoa_invert+0x9c>
 6e6:	b4 e0       	ldi	r27, 0x04	; 4
 6e8:	3c d0       	rcall	.+120    	; 0x762 <__ultoa_invert+0x9c>
 6ea:	67 0f       	add	r22, r23
 6ec:	78 1f       	adc	r23, r24
 6ee:	89 1f       	adc	r24, r25
 6f0:	9a 1f       	adc	r25, r26
 6f2:	a1 1d       	adc	r26, r1
 6f4:	68 0f       	add	r22, r24
 6f6:	79 1f       	adc	r23, r25
 6f8:	8a 1f       	adc	r24, r26
 6fa:	91 1d       	adc	r25, r1
 6fc:	a1 1d       	adc	r26, r1
 6fe:	6a 0f       	add	r22, r26
 700:	71 1d       	adc	r23, r1
 702:	81 1d       	adc	r24, r1
 704:	91 1d       	adc	r25, r1
 706:	a1 1d       	adc	r26, r1
 708:	20 d0       	rcall	.+64     	; 0x74a <__ultoa_invert+0x84>
 70a:	09 f4       	brne	.+2      	; 0x70e <__ultoa_invert+0x48>
 70c:	68 94       	set
 70e:	3f 91       	pop	r19
 710:	2a e0       	ldi	r18, 0x0A	; 10
 712:	26 9f       	mul	r18, r22
 714:	11 24       	eor	r1, r1
 716:	30 19       	sub	r19, r0
 718:	30 5d       	subi	r19, 0xD0	; 208
 71a:	31 93       	st	Z+, r19
 71c:	de f6       	brtc	.-74     	; 0x6d4 <__ultoa_invert+0xe>
 71e:	cf 01       	movw	r24, r30
 720:	08 95       	ret
 722:	46 2f       	mov	r20, r22
 724:	47 70       	andi	r20, 0x07	; 7
 726:	40 5d       	subi	r20, 0xD0	; 208
 728:	41 93       	st	Z+, r20
 72a:	b3 e0       	ldi	r27, 0x03	; 3
 72c:	0f d0       	rcall	.+30     	; 0x74c <__ultoa_invert+0x86>
 72e:	c9 f7       	brne	.-14     	; 0x722 <__ultoa_invert+0x5c>
 730:	f6 cf       	rjmp	.-20     	; 0x71e <__ultoa_invert+0x58>
 732:	46 2f       	mov	r20, r22
 734:	4f 70       	andi	r20, 0x0F	; 15
 736:	40 5d       	subi	r20, 0xD0	; 208
 738:	4a 33       	cpi	r20, 0x3A	; 58
 73a:	18 f0       	brcs	.+6      	; 0x742 <__ultoa_invert+0x7c>
 73c:	49 5d       	subi	r20, 0xD9	; 217
 73e:	31 fd       	sbrc	r19, 1
 740:	40 52       	subi	r20, 0x20	; 32
 742:	41 93       	st	Z+, r20
 744:	02 d0       	rcall	.+4      	; 0x74a <__ultoa_invert+0x84>
 746:	a9 f7       	brne	.-22     	; 0x732 <__ultoa_invert+0x6c>
 748:	ea cf       	rjmp	.-44     	; 0x71e <__ultoa_invert+0x58>
 74a:	b4 e0       	ldi	r27, 0x04	; 4
 74c:	a6 95       	lsr	r26
 74e:	97 95       	ror	r25
 750:	87 95       	ror	r24
 752:	77 95       	ror	r23
 754:	67 95       	ror	r22
 756:	ba 95       	dec	r27
 758:	c9 f7       	brne	.-14     	; 0x74c <__ultoa_invert+0x86>
 75a:	00 97       	sbiw	r24, 0x00	; 0
 75c:	61 05       	cpc	r22, r1
 75e:	71 05       	cpc	r23, r1
 760:	08 95       	ret
 762:	9b 01       	movw	r18, r22
 764:	ac 01       	movw	r20, r24
 766:	0a 2e       	mov	r0, r26
 768:	06 94       	lsr	r0
 76a:	57 95       	ror	r21
 76c:	47 95       	ror	r20
 76e:	37 95       	ror	r19
 770:	27 95       	ror	r18
 772:	ba 95       	dec	r27
 774:	c9 f7       	brne	.-14     	; 0x768 <__ultoa_invert+0xa2>
 776:	62 0f       	add	r22, r18
 778:	73 1f       	adc	r23, r19
 77a:	84 1f       	adc	r24, r20
 77c:	95 1f       	adc	r25, r21
 77e:	a0 1d       	adc	r26, r0
 780:	08 95       	ret

00000782 <_exit>:
 782:	f8 94       	cli

00000784 <__stop_program>:
 784:	ff cf       	rjmp	.-2      	; 0x784 <__stop_program>
