
SPItestUNO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  00000756  000007ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000756  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080014c  0080014c  00000836  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000836  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000894  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008c0  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077b  00000000  00000000  000011c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002b4  00000000  00000000  0000193f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001bf4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000041c  00000000  00000000  00001c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e0  00000000  00000000  00002064  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00002144  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e5       	ldi	r30, 0x56	; 86
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 34       	cpi	r26, 0x4C	; 76
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e4       	ldi	r26, 0x4C	; 76
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 35       	cpi	r26, 0x52	; 82
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  9e:	0c 94 a9 03 	jmp	0x752	; 0x752 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_Transmit>:

static void
USART_Transmit(unsigned char data, FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <USART_Transmit+0x4>
    {
        ;
    }
    
    /* Put the data into a buffer, then send/transmit the data */
    UDR0 = data;
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  b4:	08 95       	ret

000000b6 <USART_Receive>:

static char
USART_Receive(FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
  b6:	e0 ec       	ldi	r30, 0xC0	; 192
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	85 ff       	sbrs	r24, 5
  be:	fd cf       	rjmp	.-6      	; 0xba <USART_Receive+0x4>
    {
        ;
    }
    
    /* Get the received data from the buffer */
    return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
  c4:	08 95       	ret

000000c6 <main>:
/************************************************************************/
/* for usb serial not needed in the final                               */
/************************************************************************/
int 
main(void)
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	a8 97       	sbiw	r28, 0x28	; 40
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
    /* set MISO as output, pin 12 (PB4)*/
    DDRB  = (1 << PB4);
  da:	80 e1       	ldi	r24, 0x10	; 16
  dc:	84 b9       	out	0x04, r24	; 4
    /* set SPI enable */
    SPCR  = (1 << 6);
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	8c bd       	out	0x2c, r24	; 44
	/* set motion sensor pin as input */
	DDRD &= ~(1 << PD7);
  e2:	57 98       	cbi	0x0a, 7	; 10
/************************************************************************/
static void
USART_init(uint16_t ubrr) // unsigned int
{
    /* Set baud rate in the USART Baud Rate Registers (UBRR) */
    UBRR0H = (unsigned char) (ubrr >> 8);
  e4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    UBRR0L = (unsigned char) ubrr;
  e8:	87 e6       	ldi	r24, 0x67	; 103
  ea:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    
    /* Enable receiver and transmitter on RX0 and TX0 */
    UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //NOTE: the ATmega328p has 1 UART: 0
  ee:	e1 ec       	ldi	r30, 0xC1	; 193
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	88 61       	ori	r24, 0x18	; 24
  f6:	80 83       	st	Z, r24
    
    /* Set frame format: 8 bit data, 2 stop bit */
    UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
  f8:	e2 ec       	ldi	r30, 0xC2	; 194
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	8e 60       	ori	r24, 0x0E	; 14
 100:	80 83       	st	Z, r24
	/* for usb serial not needed in the final                               */
	/************************************************************************/
    // initialize the UART with 9600 BAUD
    USART_init(MYUBRR);
    // redirect the stdin and stdout to UART functions
    stdout = &uart_output;
 102:	ec e4       	ldi	r30, 0x4C	; 76
 104:	f1 e0       	ldi	r31, 0x01	; 1
 106:	8e e0       	ldi	r24, 0x0E	; 14
 108:	91 e0       	ldi	r25, 0x01	; 1
 10a:	93 83       	std	Z+3, r25	; 0x03
 10c:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	91 83       	std	Z+1, r25	; 0x01
 114:	80 83       	st	Z, r24
    /************************************************************************/
    /* for usb serial not needed in the final                               */
    /************************************************************************/
	
    char spi_send_data[20] = "slave to master\n";
 116:	81 e1       	ldi	r24, 0x11	; 17
 118:	ec e1       	ldi	r30, 0x1C	; 28
 11a:	f1 e0       	ldi	r31, 0x01	; 1
 11c:	de 01       	movw	r26, r28
 11e:	11 96       	adiw	r26, 0x01	; 1
 120:	01 90       	ld	r0, Z+
 122:	0d 92       	st	X+, r0
 124:	8a 95       	dec	r24
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0x5a>
 128:	fe 01       	movw	r30, r28
 12a:	72 96       	adiw	r30, 0x12	; 18
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	df 01       	movw	r26, r30
 130:	1d 92       	st	X+, r1
 132:	8a 95       	dec	r24
 134:	e9 f7       	brne	.-6      	; 0x130 <main+0x6a>

        }
        /************************************************************************/
        /* for usb serial not needed in the final                               */
        /************************************************************************/
        printf(spi_receive_data);
 136:	8e 01       	movw	r16, r28
 138:	0b 5e       	subi	r16, 0xEB	; 235
 13a:	1f 4f       	sbci	r17, 0xFF	; 255
    /* send message to master and receive message from master */
    while (1) 
    {
        /* read motion sensor */
		motion_sensor_status = (PIND & (1<<PD7));
		if (0 != motion_sensor_status) {
 13c:	4f 9b       	sbis	0x09, 7	; 9
 13e:	0a c0       	rjmp	.+20     	; 0x154 <main+0x8e>
			//sensor high
			strcpy(spi_send_data,"detected motion\n");
 140:	81 e1       	ldi	r24, 0x11	; 17
 142:	e0 e3       	ldi	r30, 0x30	; 48
 144:	f1 e0       	ldi	r31, 0x01	; 1
 146:	de 01       	movw	r26, r28
 148:	11 96       	adiw	r26, 0x01	; 1
 14a:	01 90       	ld	r0, Z+
 14c:	0d 92       	st	X+, r0
 14e:	8a 95       	dec	r24
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0x84>
 152:	1b c0       	rjmp	.+54     	; 0x18a <main+0xc4>
		} else {
			// sensor low
			strcpy(spi_send_data,"no motion\n");
 154:	8b e0       	ldi	r24, 0x0B	; 11
 156:	e1 e4       	ldi	r30, 0x41	; 65
 158:	f1 e0       	ldi	r31, 0x01	; 1
 15a:	de 01       	movw	r26, r28
 15c:	11 96       	adiw	r26, 0x01	; 1
 15e:	01 90       	ld	r0, Z+
 160:	0d 92       	st	X+, r0
 162:	8a 95       	dec	r24
 164:	e1 f7       	brne	.-8      	; 0x15e <main+0x98>
 166:	11 c0       	rjmp	.+34     	; 0x18a <main+0xc4>
		}
		/* transmit data */
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
        {
            
            SPDR = spi_send_data[spi_data_index]; // send byte using SPI data register
 168:	81 91       	ld	r24, Z+
 16a:	8e bd       	out	0x2e, r24	; 46
            
            while(!(SPSR & (1 << SPIF)))
 16c:	0d b4       	in	r0, 0x2d	; 45
 16e:	07 fe       	sbrs	r0, 7
 170:	fd cf       	rjmp	.-6      	; 0x16c <main+0xa6>
            {
                /* wait until the transmission is complete */
                ;
            }
            spi_receive_data[spi_data_index] = SPDR; // receive byte from the SPI data register
 172:	8e b5       	in	r24, 0x2e	; 46
 174:	8d 93       	st	X+, r24
		} else {
			// sensor low
			strcpy(spi_send_data,"no motion\n");
		}
		/* transmit data */
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 176:	e2 17       	cp	r30, r18
 178:	f3 07       	cpc	r31, r19
 17a:	b1 f7       	brne	.-20     	; 0x168 <main+0xa2>

        }
        /************************************************************************/
        /* for usb serial not needed in the final                               */
        /************************************************************************/
        printf(spi_receive_data);
 17c:	1f 93       	push	r17
 17e:	0f 93       	push	r16
 180:	0e 94 cb 00 	call	0x196	; 0x196 <printf>
		/************************************************************************/
		/* for usb serial not needed in the final                               */
		/************************************************************************/
    }
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	d9 cf       	rjmp	.-78     	; 0x13c <main+0x76>
 18a:	fe 01       	movw	r30, r28
 18c:	31 96       	adiw	r30, 0x01	; 1
 18e:	de 01       	movw	r26, r28
 190:	55 96       	adiw	r26, 0x15	; 21
 192:	9d 01       	movw	r18, r26
 194:	e9 cf       	rjmp	.-46     	; 0x168 <main+0xa2>

00000196 <printf>:
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e1 ed       	ldi	r30, 0xD1	; 209
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	0c 94 82 03 	jmp	0x704	; 0x704 <__prologue_saves__+0x20>
 1a2:	ae 01       	movw	r20, r28
 1a4:	4b 5f       	subi	r20, 0xFB	; 251
 1a6:	5f 4f       	sbci	r21, 0xFF	; 255
 1a8:	fa 01       	movw	r30, r20
 1aa:	61 91       	ld	r22, Z+
 1ac:	71 91       	ld	r23, Z+
 1ae:	af 01       	movw	r20, r30
 1b0:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__data_end+0x2>
 1b4:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <__data_end+0x3>
 1b8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <vfprintf>
 1bc:	e2 e0       	ldi	r30, 0x02	; 2
 1be:	0c 94 9e 03 	jmp	0x73c	; 0x73c <__epilogue_restores__+0x20>

000001c2 <vfprintf>:
 1c2:	ab e0       	ldi	r26, 0x0B	; 11
 1c4:	b0 e0       	ldi	r27, 0x00	; 0
 1c6:	e7 ee       	ldi	r30, 0xE7	; 231
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <__prologue_saves__>
 1ce:	6c 01       	movw	r12, r24
 1d0:	7b 01       	movw	r14, r22
 1d2:	8a 01       	movw	r16, r20
 1d4:	fc 01       	movw	r30, r24
 1d6:	17 82       	std	Z+7, r1	; 0x07
 1d8:	16 82       	std	Z+6, r1	; 0x06
 1da:	83 81       	ldd	r24, Z+3	; 0x03
 1dc:	81 ff       	sbrs	r24, 1
 1de:	cc c1       	rjmp	.+920    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 1e0:	ce 01       	movw	r24, r28
 1e2:	01 96       	adiw	r24, 0x01	; 1
 1e4:	3c 01       	movw	r6, r24
 1e6:	f6 01       	movw	r30, r12
 1e8:	93 81       	ldd	r25, Z+3	; 0x03
 1ea:	f7 01       	movw	r30, r14
 1ec:	93 fd       	sbrc	r25, 3
 1ee:	85 91       	lpm	r24, Z+
 1f0:	93 ff       	sbrs	r25, 3
 1f2:	81 91       	ld	r24, Z+
 1f4:	7f 01       	movw	r14, r30
 1f6:	88 23       	and	r24, r24
 1f8:	09 f4       	brne	.+2      	; 0x1fc <vfprintf+0x3a>
 1fa:	ba c1       	rjmp	.+884    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 1fc:	85 32       	cpi	r24, 0x25	; 37
 1fe:	39 f4       	brne	.+14     	; 0x20e <vfprintf+0x4c>
 200:	93 fd       	sbrc	r25, 3
 202:	85 91       	lpm	r24, Z+
 204:	93 ff       	sbrs	r25, 3
 206:	81 91       	ld	r24, Z+
 208:	7f 01       	movw	r14, r30
 20a:	85 32       	cpi	r24, 0x25	; 37
 20c:	29 f4       	brne	.+10     	; 0x218 <vfprintf+0x56>
 20e:	b6 01       	movw	r22, r12
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 216:	e7 cf       	rjmp	.-50     	; 0x1e6 <vfprintf+0x24>
 218:	91 2c       	mov	r9, r1
 21a:	21 2c       	mov	r2, r1
 21c:	31 2c       	mov	r3, r1
 21e:	ff e1       	ldi	r31, 0x1F	; 31
 220:	f3 15       	cp	r31, r3
 222:	d8 f0       	brcs	.+54     	; 0x25a <vfprintf+0x98>
 224:	8b 32       	cpi	r24, 0x2B	; 43
 226:	79 f0       	breq	.+30     	; 0x246 <vfprintf+0x84>
 228:	38 f4       	brcc	.+14     	; 0x238 <vfprintf+0x76>
 22a:	80 32       	cpi	r24, 0x20	; 32
 22c:	79 f0       	breq	.+30     	; 0x24c <vfprintf+0x8a>
 22e:	83 32       	cpi	r24, 0x23	; 35
 230:	a1 f4       	brne	.+40     	; 0x25a <vfprintf+0x98>
 232:	23 2d       	mov	r18, r3
 234:	20 61       	ori	r18, 0x10	; 16
 236:	1d c0       	rjmp	.+58     	; 0x272 <vfprintf+0xb0>
 238:	8d 32       	cpi	r24, 0x2D	; 45
 23a:	61 f0       	breq	.+24     	; 0x254 <vfprintf+0x92>
 23c:	80 33       	cpi	r24, 0x30	; 48
 23e:	69 f4       	brne	.+26     	; 0x25a <vfprintf+0x98>
 240:	23 2d       	mov	r18, r3
 242:	21 60       	ori	r18, 0x01	; 1
 244:	16 c0       	rjmp	.+44     	; 0x272 <vfprintf+0xb0>
 246:	83 2d       	mov	r24, r3
 248:	82 60       	ori	r24, 0x02	; 2
 24a:	38 2e       	mov	r3, r24
 24c:	e3 2d       	mov	r30, r3
 24e:	e4 60       	ori	r30, 0x04	; 4
 250:	3e 2e       	mov	r3, r30
 252:	2a c0       	rjmp	.+84     	; 0x2a8 <vfprintf+0xe6>
 254:	f3 2d       	mov	r31, r3
 256:	f8 60       	ori	r31, 0x08	; 8
 258:	1d c0       	rjmp	.+58     	; 0x294 <vfprintf+0xd2>
 25a:	37 fc       	sbrc	r3, 7
 25c:	2d c0       	rjmp	.+90     	; 0x2b8 <vfprintf+0xf6>
 25e:	20 ed       	ldi	r18, 0xD0	; 208
 260:	28 0f       	add	r18, r24
 262:	2a 30       	cpi	r18, 0x0A	; 10
 264:	40 f0       	brcs	.+16     	; 0x276 <vfprintf+0xb4>
 266:	8e 32       	cpi	r24, 0x2E	; 46
 268:	b9 f4       	brne	.+46     	; 0x298 <vfprintf+0xd6>
 26a:	36 fc       	sbrc	r3, 6
 26c:	81 c1       	rjmp	.+770    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 26e:	23 2d       	mov	r18, r3
 270:	20 64       	ori	r18, 0x40	; 64
 272:	32 2e       	mov	r3, r18
 274:	19 c0       	rjmp	.+50     	; 0x2a8 <vfprintf+0xe6>
 276:	36 fe       	sbrs	r3, 6
 278:	06 c0       	rjmp	.+12     	; 0x286 <vfprintf+0xc4>
 27a:	8a e0       	ldi	r24, 0x0A	; 10
 27c:	98 9e       	mul	r9, r24
 27e:	20 0d       	add	r18, r0
 280:	11 24       	eor	r1, r1
 282:	92 2e       	mov	r9, r18
 284:	11 c0       	rjmp	.+34     	; 0x2a8 <vfprintf+0xe6>
 286:	ea e0       	ldi	r30, 0x0A	; 10
 288:	2e 9e       	mul	r2, r30
 28a:	20 0d       	add	r18, r0
 28c:	11 24       	eor	r1, r1
 28e:	22 2e       	mov	r2, r18
 290:	f3 2d       	mov	r31, r3
 292:	f0 62       	ori	r31, 0x20	; 32
 294:	3f 2e       	mov	r3, r31
 296:	08 c0       	rjmp	.+16     	; 0x2a8 <vfprintf+0xe6>
 298:	8c 36       	cpi	r24, 0x6C	; 108
 29a:	21 f4       	brne	.+8      	; 0x2a4 <vfprintf+0xe2>
 29c:	83 2d       	mov	r24, r3
 29e:	80 68       	ori	r24, 0x80	; 128
 2a0:	38 2e       	mov	r3, r24
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <vfprintf+0xe6>
 2a4:	88 36       	cpi	r24, 0x68	; 104
 2a6:	41 f4       	brne	.+16     	; 0x2b8 <vfprintf+0xf6>
 2a8:	f7 01       	movw	r30, r14
 2aa:	93 fd       	sbrc	r25, 3
 2ac:	85 91       	lpm	r24, Z+
 2ae:	93 ff       	sbrs	r25, 3
 2b0:	81 91       	ld	r24, Z+
 2b2:	7f 01       	movw	r14, r30
 2b4:	81 11       	cpse	r24, r1
 2b6:	b3 cf       	rjmp	.-154    	; 0x21e <vfprintf+0x5c>
 2b8:	98 2f       	mov	r25, r24
 2ba:	9f 7d       	andi	r25, 0xDF	; 223
 2bc:	95 54       	subi	r25, 0x45	; 69
 2be:	93 30       	cpi	r25, 0x03	; 3
 2c0:	28 f4       	brcc	.+10     	; 0x2cc <vfprintf+0x10a>
 2c2:	0c 5f       	subi	r16, 0xFC	; 252
 2c4:	1f 4f       	sbci	r17, 0xFF	; 255
 2c6:	9f e3       	ldi	r25, 0x3F	; 63
 2c8:	99 83       	std	Y+1, r25	; 0x01
 2ca:	0d c0       	rjmp	.+26     	; 0x2e6 <vfprintf+0x124>
 2cc:	83 36       	cpi	r24, 0x63	; 99
 2ce:	31 f0       	breq	.+12     	; 0x2dc <vfprintf+0x11a>
 2d0:	83 37       	cpi	r24, 0x73	; 115
 2d2:	71 f0       	breq	.+28     	; 0x2f0 <vfprintf+0x12e>
 2d4:	83 35       	cpi	r24, 0x53	; 83
 2d6:	09 f0       	breq	.+2      	; 0x2da <vfprintf+0x118>
 2d8:	59 c0       	rjmp	.+178    	; 0x38c <vfprintf+0x1ca>
 2da:	21 c0       	rjmp	.+66     	; 0x31e <vfprintf+0x15c>
 2dc:	f8 01       	movw	r30, r16
 2de:	80 81       	ld	r24, Z
 2e0:	89 83       	std	Y+1, r24	; 0x01
 2e2:	0e 5f       	subi	r16, 0xFE	; 254
 2e4:	1f 4f       	sbci	r17, 0xFF	; 255
 2e6:	88 24       	eor	r8, r8
 2e8:	83 94       	inc	r8
 2ea:	91 2c       	mov	r9, r1
 2ec:	53 01       	movw	r10, r6
 2ee:	13 c0       	rjmp	.+38     	; 0x316 <vfprintf+0x154>
 2f0:	28 01       	movw	r4, r16
 2f2:	f2 e0       	ldi	r31, 0x02	; 2
 2f4:	4f 0e       	add	r4, r31
 2f6:	51 1c       	adc	r5, r1
 2f8:	f8 01       	movw	r30, r16
 2fa:	a0 80       	ld	r10, Z
 2fc:	b1 80       	ldd	r11, Z+1	; 0x01
 2fe:	36 fe       	sbrs	r3, 6
 300:	03 c0       	rjmp	.+6      	; 0x308 <vfprintf+0x146>
 302:	69 2d       	mov	r22, r9
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	02 c0       	rjmp	.+4      	; 0x30c <vfprintf+0x14a>
 308:	6f ef       	ldi	r22, 0xFF	; 255
 30a:	7f ef       	ldi	r23, 0xFF	; 255
 30c:	c5 01       	movw	r24, r10
 30e:	0e 94 cd 02 	call	0x59a	; 0x59a <strnlen>
 312:	4c 01       	movw	r8, r24
 314:	82 01       	movw	r16, r4
 316:	f3 2d       	mov	r31, r3
 318:	ff 77       	andi	r31, 0x7F	; 127
 31a:	3f 2e       	mov	r3, r31
 31c:	16 c0       	rjmp	.+44     	; 0x34a <vfprintf+0x188>
 31e:	28 01       	movw	r4, r16
 320:	22 e0       	ldi	r18, 0x02	; 2
 322:	42 0e       	add	r4, r18
 324:	51 1c       	adc	r5, r1
 326:	f8 01       	movw	r30, r16
 328:	a0 80       	ld	r10, Z
 32a:	b1 80       	ldd	r11, Z+1	; 0x01
 32c:	36 fe       	sbrs	r3, 6
 32e:	03 c0       	rjmp	.+6      	; 0x336 <vfprintf+0x174>
 330:	69 2d       	mov	r22, r9
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	02 c0       	rjmp	.+4      	; 0x33a <vfprintf+0x178>
 336:	6f ef       	ldi	r22, 0xFF	; 255
 338:	7f ef       	ldi	r23, 0xFF	; 255
 33a:	c5 01       	movw	r24, r10
 33c:	0e 94 c2 02 	call	0x584	; 0x584 <strnlen_P>
 340:	4c 01       	movw	r8, r24
 342:	f3 2d       	mov	r31, r3
 344:	f0 68       	ori	r31, 0x80	; 128
 346:	3f 2e       	mov	r3, r31
 348:	82 01       	movw	r16, r4
 34a:	33 fc       	sbrc	r3, 3
 34c:	1b c0       	rjmp	.+54     	; 0x384 <vfprintf+0x1c2>
 34e:	82 2d       	mov	r24, r2
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	88 16       	cp	r8, r24
 354:	99 06       	cpc	r9, r25
 356:	b0 f4       	brcc	.+44     	; 0x384 <vfprintf+0x1c2>
 358:	b6 01       	movw	r22, r12
 35a:	80 e2       	ldi	r24, 0x20	; 32
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 362:	2a 94       	dec	r2
 364:	f4 cf       	rjmp	.-24     	; 0x34e <vfprintf+0x18c>
 366:	f5 01       	movw	r30, r10
 368:	37 fc       	sbrc	r3, 7
 36a:	85 91       	lpm	r24, Z+
 36c:	37 fe       	sbrs	r3, 7
 36e:	81 91       	ld	r24, Z+
 370:	5f 01       	movw	r10, r30
 372:	b6 01       	movw	r22, r12
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 37a:	21 10       	cpse	r2, r1
 37c:	2a 94       	dec	r2
 37e:	21 e0       	ldi	r18, 0x01	; 1
 380:	82 1a       	sub	r8, r18
 382:	91 08       	sbc	r9, r1
 384:	81 14       	cp	r8, r1
 386:	91 04       	cpc	r9, r1
 388:	71 f7       	brne	.-36     	; 0x366 <vfprintf+0x1a4>
 38a:	e8 c0       	rjmp	.+464    	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 38c:	84 36       	cpi	r24, 0x64	; 100
 38e:	11 f0       	breq	.+4      	; 0x394 <vfprintf+0x1d2>
 390:	89 36       	cpi	r24, 0x69	; 105
 392:	41 f5       	brne	.+80     	; 0x3e4 <vfprintf+0x222>
 394:	f8 01       	movw	r30, r16
 396:	37 fe       	sbrs	r3, 7
 398:	07 c0       	rjmp	.+14     	; 0x3a8 <vfprintf+0x1e6>
 39a:	60 81       	ld	r22, Z
 39c:	71 81       	ldd	r23, Z+1	; 0x01
 39e:	82 81       	ldd	r24, Z+2	; 0x02
 3a0:	93 81       	ldd	r25, Z+3	; 0x03
 3a2:	0c 5f       	subi	r16, 0xFC	; 252
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <vfprintf+0x1f6>
 3a8:	60 81       	ld	r22, Z
 3aa:	71 81       	ldd	r23, Z+1	; 0x01
 3ac:	07 2e       	mov	r0, r23
 3ae:	00 0c       	add	r0, r0
 3b0:	88 0b       	sbc	r24, r24
 3b2:	99 0b       	sbc	r25, r25
 3b4:	0e 5f       	subi	r16, 0xFE	; 254
 3b6:	1f 4f       	sbci	r17, 0xFF	; 255
 3b8:	f3 2d       	mov	r31, r3
 3ba:	ff 76       	andi	r31, 0x6F	; 111
 3bc:	3f 2e       	mov	r3, r31
 3be:	97 ff       	sbrs	r25, 7
 3c0:	09 c0       	rjmp	.+18     	; 0x3d4 <vfprintf+0x212>
 3c2:	90 95       	com	r25
 3c4:	80 95       	com	r24
 3c6:	70 95       	com	r23
 3c8:	61 95       	neg	r22
 3ca:	7f 4f       	sbci	r23, 0xFF	; 255
 3cc:	8f 4f       	sbci	r24, 0xFF	; 255
 3ce:	9f 4f       	sbci	r25, 0xFF	; 255
 3d0:	f0 68       	ori	r31, 0x80	; 128
 3d2:	3f 2e       	mov	r3, r31
 3d4:	2a e0       	ldi	r18, 0x0A	; 10
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	a3 01       	movw	r20, r6
 3da:	0e 94 14 03 	call	0x628	; 0x628 <__ultoa_invert>
 3de:	88 2e       	mov	r8, r24
 3e0:	86 18       	sub	r8, r6
 3e2:	45 c0       	rjmp	.+138    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 3e4:	85 37       	cpi	r24, 0x75	; 117
 3e6:	31 f4       	brne	.+12     	; 0x3f4 <vfprintf+0x232>
 3e8:	23 2d       	mov	r18, r3
 3ea:	2f 7e       	andi	r18, 0xEF	; 239
 3ec:	b2 2e       	mov	r11, r18
 3ee:	2a e0       	ldi	r18, 0x0A	; 10
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	25 c0       	rjmp	.+74     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3f4:	93 2d       	mov	r25, r3
 3f6:	99 7f       	andi	r25, 0xF9	; 249
 3f8:	b9 2e       	mov	r11, r25
 3fa:	8f 36       	cpi	r24, 0x6F	; 111
 3fc:	c1 f0       	breq	.+48     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3fe:	18 f4       	brcc	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	88 35       	cpi	r24, 0x58	; 88
 402:	79 f0       	breq	.+30     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 404:	b5 c0       	rjmp	.+362    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 406:	80 37       	cpi	r24, 0x70	; 112
 408:	19 f0       	breq	.+6      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40a:	88 37       	cpi	r24, 0x78	; 120
 40c:	21 f0       	breq	.+8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 40e:	b0 c0       	rjmp	.+352    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 410:	e9 2f       	mov	r30, r25
 412:	e0 61       	ori	r30, 0x10	; 16
 414:	be 2e       	mov	r11, r30
 416:	b4 fe       	sbrs	r11, 4
 418:	0d c0       	rjmp	.+26     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 41a:	fb 2d       	mov	r31, r11
 41c:	f4 60       	ori	r31, 0x04	; 4
 41e:	bf 2e       	mov	r11, r31
 420:	09 c0       	rjmp	.+18     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 422:	34 fe       	sbrs	r3, 4
 424:	0a c0       	rjmp	.+20     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 426:	29 2f       	mov	r18, r25
 428:	26 60       	ori	r18, 0x06	; 6
 42a:	b2 2e       	mov	r11, r18
 42c:	06 c0       	rjmp	.+12     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42e:	28 e0       	ldi	r18, 0x08	; 8
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	05 c0       	rjmp	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 434:	20 e1       	ldi	r18, 0x10	; 16
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43a:	20 e1       	ldi	r18, 0x10	; 16
 43c:	32 e0       	ldi	r19, 0x02	; 2
 43e:	f8 01       	movw	r30, r16
 440:	b7 fe       	sbrs	r11, 7
 442:	07 c0       	rjmp	.+14     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	93 81       	ldd	r25, Z+3	; 0x03
 44c:	0c 5f       	subi	r16, 0xFC	; 252
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	06 c0       	rjmp	.+12     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 452:	60 81       	ld	r22, Z
 454:	71 81       	ldd	r23, Z+1	; 0x01
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 5f       	subi	r16, 0xFE	; 254
 45c:	1f 4f       	sbci	r17, 0xFF	; 255
 45e:	a3 01       	movw	r20, r6
 460:	0e 94 14 03 	call	0x628	; 0x628 <__ultoa_invert>
 464:	88 2e       	mov	r8, r24
 466:	86 18       	sub	r8, r6
 468:	fb 2d       	mov	r31, r11
 46a:	ff 77       	andi	r31, 0x7F	; 127
 46c:	3f 2e       	mov	r3, r31
 46e:	36 fe       	sbrs	r3, 6
 470:	0d c0       	rjmp	.+26     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 472:	23 2d       	mov	r18, r3
 474:	2e 7f       	andi	r18, 0xFE	; 254
 476:	a2 2e       	mov	r10, r18
 478:	89 14       	cp	r8, r9
 47a:	58 f4       	brcc	.+22     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 47c:	34 fe       	sbrs	r3, 4
 47e:	0b c0       	rjmp	.+22     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 480:	32 fc       	sbrc	r3, 2
 482:	09 c0       	rjmp	.+18     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 484:	83 2d       	mov	r24, r3
 486:	8e 7e       	andi	r24, 0xEE	; 238
 488:	a8 2e       	mov	r10, r24
 48a:	05 c0       	rjmp	.+10     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 48c:	b8 2c       	mov	r11, r8
 48e:	a3 2c       	mov	r10, r3
 490:	03 c0       	rjmp	.+6      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 492:	b8 2c       	mov	r11, r8
 494:	01 c0       	rjmp	.+2      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 496:	b9 2c       	mov	r11, r9
 498:	a4 fe       	sbrs	r10, 4
 49a:	0f c0       	rjmp	.+30     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 49c:	fe 01       	movw	r30, r28
 49e:	e8 0d       	add	r30, r8
 4a0:	f1 1d       	adc	r31, r1
 4a2:	80 81       	ld	r24, Z
 4a4:	80 33       	cpi	r24, 0x30	; 48
 4a6:	21 f4       	brne	.+8      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a8:	9a 2d       	mov	r25, r10
 4aa:	99 7e       	andi	r25, 0xE9	; 233
 4ac:	a9 2e       	mov	r10, r25
 4ae:	09 c0       	rjmp	.+18     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b0:	a2 fe       	sbrs	r10, 2
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b4:	b3 94       	inc	r11
 4b6:	b3 94       	inc	r11
 4b8:	04 c0       	rjmp	.+8      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4ba:	8a 2d       	mov	r24, r10
 4bc:	86 78       	andi	r24, 0x86	; 134
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4c0:	b3 94       	inc	r11
 4c2:	a3 fc       	sbrc	r10, 3
 4c4:	11 c0       	rjmp	.+34     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4c6:	a0 fe       	sbrs	r10, 0
 4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ca:	b2 14       	cp	r11, r2
 4cc:	88 f4       	brcc	.+34     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ce:	28 0c       	add	r2, r8
 4d0:	92 2c       	mov	r9, r2
 4d2:	9b 18       	sub	r9, r11
 4d4:	0e c0       	rjmp	.+28     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d6:	b2 14       	cp	r11, r2
 4d8:	60 f4       	brcc	.+24     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4da:	b6 01       	movw	r22, r12
 4dc:	80 e2       	ldi	r24, 0x20	; 32
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 4e4:	b3 94       	inc	r11
 4e6:	f7 cf       	rjmp	.-18     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4e8:	b2 14       	cp	r11, r2
 4ea:	18 f4       	brcc	.+6      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ec:	2b 18       	sub	r2, r11
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4f0:	98 2c       	mov	r9, r8
 4f2:	21 2c       	mov	r2, r1
 4f4:	a4 fe       	sbrs	r10, 4
 4f6:	10 c0       	rjmp	.+32     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4f8:	b6 01       	movw	r22, r12
 4fa:	80 e3       	ldi	r24, 0x30	; 48
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 502:	a2 fe       	sbrs	r10, 2
 504:	17 c0       	rjmp	.+46     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 506:	a1 fc       	sbrc	r10, 1
 508:	03 c0       	rjmp	.+6      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50a:	88 e7       	ldi	r24, 0x78	; 120
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 510:	88 e5       	ldi	r24, 0x58	; 88
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	b6 01       	movw	r22, r12
 516:	0c c0       	rjmp	.+24     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 518:	8a 2d       	mov	r24, r10
 51a:	86 78       	andi	r24, 0x86	; 134
 51c:	59 f0       	breq	.+22     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 51e:	a1 fe       	sbrs	r10, 1
 520:	02 c0       	rjmp	.+4      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 522:	8b e2       	ldi	r24, 0x2B	; 43
 524:	01 c0       	rjmp	.+2      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 526:	80 e2       	ldi	r24, 0x20	; 32
 528:	a7 fc       	sbrc	r10, 7
 52a:	8d e2       	ldi	r24, 0x2D	; 45
 52c:	b6 01       	movw	r22, r12
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 534:	89 14       	cp	r8, r9
 536:	38 f4       	brcc	.+14     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 538:	b6 01       	movw	r22, r12
 53a:	80 e3       	ldi	r24, 0x30	; 48
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 542:	9a 94       	dec	r9
 544:	f7 cf       	rjmp	.-18     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 546:	8a 94       	dec	r8
 548:	f3 01       	movw	r30, r6
 54a:	e8 0d       	add	r30, r8
 54c:	f1 1d       	adc	r31, r1
 54e:	80 81       	ld	r24, Z
 550:	b6 01       	movw	r22, r12
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 558:	81 10       	cpse	r8, r1
 55a:	f5 cf       	rjmp	.-22     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 55c:	22 20       	and	r2, r2
 55e:	09 f4       	brne	.+2      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 560:	42 ce       	rjmp	.-892    	; 0x1e6 <vfprintf+0x24>
 562:	b6 01       	movw	r22, r12
 564:	80 e2       	ldi	r24, 0x20	; 32
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <fputc>
 56c:	2a 94       	dec	r2
 56e:	f6 cf       	rjmp	.-20     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 570:	f6 01       	movw	r30, r12
 572:	86 81       	ldd	r24, Z+6	; 0x06
 574:	97 81       	ldd	r25, Z+7	; 0x07
 576:	02 c0       	rjmp	.+4      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 578:	8f ef       	ldi	r24, 0xFF	; 255
 57a:	9f ef       	ldi	r25, 0xFF	; 255
 57c:	2b 96       	adiw	r28, 0x0b	; 11
 57e:	e2 e1       	ldi	r30, 0x12	; 18
 580:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__epilogue_restores__>

00000584 <strnlen_P>:
 584:	fc 01       	movw	r30, r24
 586:	05 90       	lpm	r0, Z+
 588:	61 50       	subi	r22, 0x01	; 1
 58a:	70 40       	sbci	r23, 0x00	; 0
 58c:	01 10       	cpse	r0, r1
 58e:	d8 f7       	brcc	.-10     	; 0x586 <strnlen_P+0x2>
 590:	80 95       	com	r24
 592:	90 95       	com	r25
 594:	8e 0f       	add	r24, r30
 596:	9f 1f       	adc	r25, r31
 598:	08 95       	ret

0000059a <strnlen>:
 59a:	fc 01       	movw	r30, r24
 59c:	61 50       	subi	r22, 0x01	; 1
 59e:	70 40       	sbci	r23, 0x00	; 0
 5a0:	01 90       	ld	r0, Z+
 5a2:	01 10       	cpse	r0, r1
 5a4:	d8 f7       	brcc	.-10     	; 0x59c <strnlen+0x2>
 5a6:	80 95       	com	r24
 5a8:	90 95       	com	r25
 5aa:	8e 0f       	add	r24, r30
 5ac:	9f 1f       	adc	r25, r31
 5ae:	08 95       	ret

000005b0 <fputc>:
 5b0:	0f 93       	push	r16
 5b2:	1f 93       	push	r17
 5b4:	cf 93       	push	r28
 5b6:	df 93       	push	r29
 5b8:	fb 01       	movw	r30, r22
 5ba:	23 81       	ldd	r18, Z+3	; 0x03
 5bc:	21 fd       	sbrc	r18, 1
 5be:	03 c0       	rjmp	.+6      	; 0x5c6 <fputc+0x16>
 5c0:	8f ef       	ldi	r24, 0xFF	; 255
 5c2:	9f ef       	ldi	r25, 0xFF	; 255
 5c4:	2c c0       	rjmp	.+88     	; 0x61e <fputc+0x6e>
 5c6:	22 ff       	sbrs	r18, 2
 5c8:	16 c0       	rjmp	.+44     	; 0x5f6 <fputc+0x46>
 5ca:	46 81       	ldd	r20, Z+6	; 0x06
 5cc:	57 81       	ldd	r21, Z+7	; 0x07
 5ce:	24 81       	ldd	r18, Z+4	; 0x04
 5d0:	35 81       	ldd	r19, Z+5	; 0x05
 5d2:	42 17       	cp	r20, r18
 5d4:	53 07       	cpc	r21, r19
 5d6:	44 f4       	brge	.+16     	; 0x5e8 <fputc+0x38>
 5d8:	a0 81       	ld	r26, Z
 5da:	b1 81       	ldd	r27, Z+1	; 0x01
 5dc:	9d 01       	movw	r18, r26
 5de:	2f 5f       	subi	r18, 0xFF	; 255
 5e0:	3f 4f       	sbci	r19, 0xFF	; 255
 5e2:	31 83       	std	Z+1, r19	; 0x01
 5e4:	20 83       	st	Z, r18
 5e6:	8c 93       	st	X, r24
 5e8:	26 81       	ldd	r18, Z+6	; 0x06
 5ea:	37 81       	ldd	r19, Z+7	; 0x07
 5ec:	2f 5f       	subi	r18, 0xFF	; 255
 5ee:	3f 4f       	sbci	r19, 0xFF	; 255
 5f0:	37 83       	std	Z+7, r19	; 0x07
 5f2:	26 83       	std	Z+6, r18	; 0x06
 5f4:	14 c0       	rjmp	.+40     	; 0x61e <fputc+0x6e>
 5f6:	8b 01       	movw	r16, r22
 5f8:	ec 01       	movw	r28, r24
 5fa:	fb 01       	movw	r30, r22
 5fc:	00 84       	ldd	r0, Z+8	; 0x08
 5fe:	f1 85       	ldd	r31, Z+9	; 0x09
 600:	e0 2d       	mov	r30, r0
 602:	09 95       	icall
 604:	89 2b       	or	r24, r25
 606:	e1 f6       	brne	.-72     	; 0x5c0 <fputc+0x10>
 608:	d8 01       	movw	r26, r16
 60a:	16 96       	adiw	r26, 0x06	; 6
 60c:	8d 91       	ld	r24, X+
 60e:	9c 91       	ld	r25, X
 610:	17 97       	sbiw	r26, 0x07	; 7
 612:	01 96       	adiw	r24, 0x01	; 1
 614:	17 96       	adiw	r26, 0x07	; 7
 616:	9c 93       	st	X, r25
 618:	8e 93       	st	-X, r24
 61a:	16 97       	sbiw	r26, 0x06	; 6
 61c:	ce 01       	movw	r24, r28
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	1f 91       	pop	r17
 624:	0f 91       	pop	r16
 626:	08 95       	ret

00000628 <__ultoa_invert>:
 628:	fa 01       	movw	r30, r20
 62a:	aa 27       	eor	r26, r26
 62c:	28 30       	cpi	r18, 0x08	; 8
 62e:	51 f1       	breq	.+84     	; 0x684 <__ultoa_invert+0x5c>
 630:	20 31       	cpi	r18, 0x10	; 16
 632:	81 f1       	breq	.+96     	; 0x694 <__ultoa_invert+0x6c>
 634:	e8 94       	clt
 636:	6f 93       	push	r22
 638:	6e 7f       	andi	r22, 0xFE	; 254
 63a:	6e 5f       	subi	r22, 0xFE	; 254
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	8f 4f       	sbci	r24, 0xFF	; 255
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	af 4f       	sbci	r26, 0xFF	; 255
 644:	b1 e0       	ldi	r27, 0x01	; 1
 646:	3e d0       	rcall	.+124    	; 0x6c4 <__ultoa_invert+0x9c>
 648:	b4 e0       	ldi	r27, 0x04	; 4
 64a:	3c d0       	rcall	.+120    	; 0x6c4 <__ultoa_invert+0x9c>
 64c:	67 0f       	add	r22, r23
 64e:	78 1f       	adc	r23, r24
 650:	89 1f       	adc	r24, r25
 652:	9a 1f       	adc	r25, r26
 654:	a1 1d       	adc	r26, r1
 656:	68 0f       	add	r22, r24
 658:	79 1f       	adc	r23, r25
 65a:	8a 1f       	adc	r24, r26
 65c:	91 1d       	adc	r25, r1
 65e:	a1 1d       	adc	r26, r1
 660:	6a 0f       	add	r22, r26
 662:	71 1d       	adc	r23, r1
 664:	81 1d       	adc	r24, r1
 666:	91 1d       	adc	r25, r1
 668:	a1 1d       	adc	r26, r1
 66a:	20 d0       	rcall	.+64     	; 0x6ac <__ultoa_invert+0x84>
 66c:	09 f4       	brne	.+2      	; 0x670 <__ultoa_invert+0x48>
 66e:	68 94       	set
 670:	3f 91       	pop	r19
 672:	2a e0       	ldi	r18, 0x0A	; 10
 674:	26 9f       	mul	r18, r22
 676:	11 24       	eor	r1, r1
 678:	30 19       	sub	r19, r0
 67a:	30 5d       	subi	r19, 0xD0	; 208
 67c:	31 93       	st	Z+, r19
 67e:	de f6       	brtc	.-74     	; 0x636 <__ultoa_invert+0xe>
 680:	cf 01       	movw	r24, r30
 682:	08 95       	ret
 684:	46 2f       	mov	r20, r22
 686:	47 70       	andi	r20, 0x07	; 7
 688:	40 5d       	subi	r20, 0xD0	; 208
 68a:	41 93       	st	Z+, r20
 68c:	b3 e0       	ldi	r27, 0x03	; 3
 68e:	0f d0       	rcall	.+30     	; 0x6ae <__ultoa_invert+0x86>
 690:	c9 f7       	brne	.-14     	; 0x684 <__ultoa_invert+0x5c>
 692:	f6 cf       	rjmp	.-20     	; 0x680 <__ultoa_invert+0x58>
 694:	46 2f       	mov	r20, r22
 696:	4f 70       	andi	r20, 0x0F	; 15
 698:	40 5d       	subi	r20, 0xD0	; 208
 69a:	4a 33       	cpi	r20, 0x3A	; 58
 69c:	18 f0       	brcs	.+6      	; 0x6a4 <__ultoa_invert+0x7c>
 69e:	49 5d       	subi	r20, 0xD9	; 217
 6a0:	31 fd       	sbrc	r19, 1
 6a2:	40 52       	subi	r20, 0x20	; 32
 6a4:	41 93       	st	Z+, r20
 6a6:	02 d0       	rcall	.+4      	; 0x6ac <__ultoa_invert+0x84>
 6a8:	a9 f7       	brne	.-22     	; 0x694 <__ultoa_invert+0x6c>
 6aa:	ea cf       	rjmp	.-44     	; 0x680 <__ultoa_invert+0x58>
 6ac:	b4 e0       	ldi	r27, 0x04	; 4
 6ae:	a6 95       	lsr	r26
 6b0:	97 95       	ror	r25
 6b2:	87 95       	ror	r24
 6b4:	77 95       	ror	r23
 6b6:	67 95       	ror	r22
 6b8:	ba 95       	dec	r27
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__ultoa_invert+0x86>
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	61 05       	cpc	r22, r1
 6c0:	71 05       	cpc	r23, r1
 6c2:	08 95       	ret
 6c4:	9b 01       	movw	r18, r22
 6c6:	ac 01       	movw	r20, r24
 6c8:	0a 2e       	mov	r0, r26
 6ca:	06 94       	lsr	r0
 6cc:	57 95       	ror	r21
 6ce:	47 95       	ror	r20
 6d0:	37 95       	ror	r19
 6d2:	27 95       	ror	r18
 6d4:	ba 95       	dec	r27
 6d6:	c9 f7       	brne	.-14     	; 0x6ca <__ultoa_invert+0xa2>
 6d8:	62 0f       	add	r22, r18
 6da:	73 1f       	adc	r23, r19
 6dc:	84 1f       	adc	r24, r20
 6de:	95 1f       	adc	r25, r21
 6e0:	a0 1d       	adc	r26, r0
 6e2:	08 95       	ret

000006e4 <__prologue_saves__>:
 6e4:	2f 92       	push	r2
 6e6:	3f 92       	push	r3
 6e8:	4f 92       	push	r4
 6ea:	5f 92       	push	r5
 6ec:	6f 92       	push	r6
 6ee:	7f 92       	push	r7
 6f0:	8f 92       	push	r8
 6f2:	9f 92       	push	r9
 6f4:	af 92       	push	r10
 6f6:	bf 92       	push	r11
 6f8:	cf 92       	push	r12
 6fa:	df 92       	push	r13
 6fc:	ef 92       	push	r14
 6fe:	ff 92       	push	r15
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	cd b7       	in	r28, 0x3d	; 61
 70a:	de b7       	in	r29, 0x3e	; 62
 70c:	ca 1b       	sub	r28, r26
 70e:	db 0b       	sbc	r29, r27
 710:	0f b6       	in	r0, 0x3f	; 63
 712:	f8 94       	cli
 714:	de bf       	out	0x3e, r29	; 62
 716:	0f be       	out	0x3f, r0	; 63
 718:	cd bf       	out	0x3d, r28	; 61
 71a:	09 94       	ijmp

0000071c <__epilogue_restores__>:
 71c:	2a 88       	ldd	r2, Y+18	; 0x12
 71e:	39 88       	ldd	r3, Y+17	; 0x11
 720:	48 88       	ldd	r4, Y+16	; 0x10
 722:	5f 84       	ldd	r5, Y+15	; 0x0f
 724:	6e 84       	ldd	r6, Y+14	; 0x0e
 726:	7d 84       	ldd	r7, Y+13	; 0x0d
 728:	8c 84       	ldd	r8, Y+12	; 0x0c
 72a:	9b 84       	ldd	r9, Y+11	; 0x0b
 72c:	aa 84       	ldd	r10, Y+10	; 0x0a
 72e:	b9 84       	ldd	r11, Y+9	; 0x09
 730:	c8 84       	ldd	r12, Y+8	; 0x08
 732:	df 80       	ldd	r13, Y+7	; 0x07
 734:	ee 80       	ldd	r14, Y+6	; 0x06
 736:	fd 80       	ldd	r15, Y+5	; 0x05
 738:	0c 81       	ldd	r16, Y+4	; 0x04
 73a:	1b 81       	ldd	r17, Y+3	; 0x03
 73c:	aa 81       	ldd	r26, Y+2	; 0x02
 73e:	b9 81       	ldd	r27, Y+1	; 0x01
 740:	ce 0f       	add	r28, r30
 742:	d1 1d       	adc	r29, r1
 744:	0f b6       	in	r0, 0x3f	; 63
 746:	f8 94       	cli
 748:	de bf       	out	0x3e, r29	; 62
 74a:	0f be       	out	0x3f, r0	; 63
 74c:	cd bf       	out	0x3d, r28	; 61
 74e:	ed 01       	movw	r28, r26
 750:	08 95       	ret

00000752 <_exit>:
 752:	f8 94       	cli

00000754 <__stop_program>:
 754:	ff cf       	rjmp	.-2      	; 0x754 <__stop_program>
